'use strict';

var ethers = require('ethers');

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const _abi$1 = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_dpr",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "uint16",
                        name: "methods",
                        type: "uint16",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "maxAge",
                                type: "uint256",
                            },
                            {
                                internalType: "bool",
                                name: "noStore",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "noCache",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "immutableFlag",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "publicFlag",
                                type: "bool",
                            },
                        ],
                        internalType: "struct CacheControl",
                        name: "cache",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint16",
                                name: "code",
                                type: "uint16",
                            },
                            {
                                internalType: "string",
                                name: "location",
                                type: "string",
                            },
                        ],
                        internalType: "struct Redirect",
                        name: "redirect",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "resourceAdmin",
                        type: "bytes32",
                    },
                ],
                internalType: "struct HeaderInfo",
                name: "_defaultHeader",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "_owner",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "AccessControlBadConfirmation",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "neededRole",
                type: "bytes32",
            },
        ],
        name: "AccessControlUnauthorizedAccount",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
        ],
        name: "Forbidden",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
        ],
        name: "InvalidRole",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "path",
                type: "string",
            },
        ],
        name: "ResourceImmutable",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "publisher",
                type: "address",
            },
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                ],
                                internalType: "struct ResponseLine",
                                name: "responseLine",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "methods",
                                        type: "uint16",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "maxAge",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noStore",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noCache",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "immutableFlag",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "publicFlag",
                                                type: "bool",
                                            },
                                        ],
                                        internalType: "struct CacheControl",
                                        name: "cache",
                                        type: "tuple",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint16",
                                                name: "code",
                                                type: "uint16",
                                            },
                                            {
                                                internalType: "string",
                                                name: "location",
                                                type: "string",
                                            },
                                        ],
                                        internalType: "struct Redirect",
                                        name: "redirect",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "resourceAdmin",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct HeaderInfo",
                                name: "headerInfo",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes2",
                                        name: "mimeType",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "charset",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "encoding",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "language",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "size",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lastModified",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "header",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct ResourceMetadata",
                                name: "metadata",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "etag",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADResponse",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "headerAddress",
                        type: "bytes32",
                    },
                ],
                indexed: false,
                internalType: "struct DEFINEResponse",
                name: "defineResponse",
                type: "tuple",
            },
        ],
        name: "DEFINESuccess",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "publisher",
                type: "address",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "uint16",
                                name: "code",
                                type: "uint16",
                            },
                        ],
                        internalType: "struct ResponseLine",
                        name: "responseLine",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint16",
                                name: "methods",
                                type: "uint16",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint256",
                                        name: "maxAge",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "noStore",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "noCache",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "immutableFlag",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "publicFlag",
                                        type: "bool",
                                    },
                                ],
                                internalType: "struct CacheControl",
                                name: "cache",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                    {
                                        internalType: "string",
                                        name: "location",
                                        type: "string",
                                    },
                                ],
                                internalType: "struct Redirect",
                                name: "redirect",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "resourceAdmin",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HeaderInfo",
                        name: "headerInfo",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bytes2",
                                name: "mimeType",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "charset",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "encoding",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "language",
                                type: "bytes2",
                            },
                            {
                                internalType: "uint256",
                                name: "size",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "version",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "lastModified",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32",
                                name: "header",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ResourceMetadata",
                        name: "metadata",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "etag",
                        type: "bytes32",
                    },
                ],
                indexed: false,
                internalType: "struct HEADResponse",
                name: "deleteResponse",
                type: "tuple",
            },
        ],
        name: "DELETESuccess",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "path",
                type: "string",
            },
        ],
        name: "MetadataDeleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "path",
                type: "string",
            },
        ],
        name: "MetadataUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "path",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "chunkIndex",
                type: "uint256",
            },
        ],
        name: "OutOfBoundsChunk",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "publisher",
                type: "address",
            },
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                ],
                                internalType: "struct ResponseLine",
                                name: "responseLine",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "methods",
                                        type: "uint16",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "maxAge",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noStore",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noCache",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "immutableFlag",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "publicFlag",
                                                type: "bool",
                                            },
                                        ],
                                        internalType: "struct CacheControl",
                                        name: "cache",
                                        type: "tuple",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint16",
                                                name: "code",
                                                type: "uint16",
                                            },
                                            {
                                                internalType: "string",
                                                name: "location",
                                                type: "string",
                                            },
                                        ],
                                        internalType: "struct Redirect",
                                        name: "redirect",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "resourceAdmin",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct HeaderInfo",
                                name: "headerInfo",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes2",
                                        name: "mimeType",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "charset",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "encoding",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "language",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "size",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lastModified",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "header",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct ResourceMetadata",
                                name: "metadata",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "etag",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADResponse",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "dataPoints",
                        type: "bytes32[]",
                    },
                ],
                indexed: false,
                internalType: "struct LOCATEResponse",
                name: "patchResponse",
                type: "tuple",
            },
        ],
        name: "PATCHSuccess",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "publisher",
                type: "address",
            },
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                ],
                                internalType: "struct ResponseLine",
                                name: "responseLine",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "methods",
                                        type: "uint16",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "maxAge",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noStore",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noCache",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "immutableFlag",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "publicFlag",
                                                type: "bool",
                                            },
                                        ],
                                        internalType: "struct CacheControl",
                                        name: "cache",
                                        type: "tuple",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint16",
                                                name: "code",
                                                type: "uint16",
                                            },
                                            {
                                                internalType: "string",
                                                name: "location",
                                                type: "string",
                                            },
                                        ],
                                        internalType: "struct Redirect",
                                        name: "redirect",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "resourceAdmin",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct HeaderInfo",
                                name: "headerInfo",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes2",
                                        name: "mimeType",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "charset",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "encoding",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "language",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "size",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lastModified",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "header",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct ResourceMetadata",
                                name: "metadata",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "etag",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADResponse",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "dataPoints",
                        type: "bytes32[]",
                    },
                ],
                indexed: false,
                internalType: "struct LOCATEResponse",
                name: "putResponse",
                type: "tuple",
            },
        ],
        name: "PUTSuccess",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "path",
                type: "string",
            },
        ],
        name: "ResourceCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "path",
                type: "string",
            },
        ],
        name: "ResourceDeleted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
        ],
        name: "ResourceRoleCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "path",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "chunkIndex",
                type: "uint256",
            },
        ],
        name: "ResourceUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "previousAdminRole",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "newAdminRole",
                type: "bytes32",
            },
        ],
        name: "RoleAdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
        ],
        name: "RoleGranted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
        ],
        name: "RoleRevoked",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "oldSiteAdmin",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "newSiteAdmin",
                type: "bytes32",
            },
        ],
        name: "SiteAdminChanged",
        type: "event",
    },
    {
        inputs: [],
        name: "DEFAULT_ADMIN_ROLE",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "path",
                                        type: "string",
                                    },
                                    {
                                        internalType: "enum Method",
                                        name: "method",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct RequestLine",
                                name: "requestLine",
                                type: "tuple",
                            },
                            {
                                internalType: "uint256",
                                name: "ifModifiedSince",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32",
                                name: "ifNoneMatch",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADRequest",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint16",
                                name: "methods",
                                type: "uint16",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint256",
                                        name: "maxAge",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "noStore",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "noCache",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "immutableFlag",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "publicFlag",
                                        type: "bool",
                                    },
                                ],
                                internalType: "struct CacheControl",
                                name: "cache",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                    {
                                        internalType: "string",
                                        name: "location",
                                        type: "string",
                                    },
                                ],
                                internalType: "struct Redirect",
                                name: "redirect",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "resourceAdmin",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HeaderInfo",
                        name: "data",
                        type: "tuple",
                    },
                ],
                internalType: "struct DEFINERequest",
                name: "defineRequest",
                type: "tuple",
            },
        ],
        name: "DEFINE",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                ],
                                internalType: "struct ResponseLine",
                                name: "responseLine",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "methods",
                                        type: "uint16",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "maxAge",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noStore",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noCache",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "immutableFlag",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "publicFlag",
                                                type: "bool",
                                            },
                                        ],
                                        internalType: "struct CacheControl",
                                        name: "cache",
                                        type: "tuple",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint16",
                                                name: "code",
                                                type: "uint16",
                                            },
                                            {
                                                internalType: "string",
                                                name: "location",
                                                type: "string",
                                            },
                                        ],
                                        internalType: "struct Redirect",
                                        name: "redirect",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "resourceAdmin",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct HeaderInfo",
                                name: "headerInfo",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes2",
                                        name: "mimeType",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "charset",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "encoding",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "language",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "size",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lastModified",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "header",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct ResourceMetadata",
                                name: "metadata",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "etag",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADResponse",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "headerAddress",
                        type: "bytes32",
                    },
                ],
                internalType: "struct DEFINEResponse",
                name: "defineResponse",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "path",
                                type: "string",
                            },
                            {
                                internalType: "enum Method",
                                name: "method",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RequestLine",
                        name: "requestLine",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "ifModifiedSince",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "ifNoneMatch",
                        type: "bytes32",
                    },
                ],
                internalType: "struct HEADRequest",
                name: "deleteRequest",
                type: "tuple",
            },
        ],
        name: "DELETE",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "uint16",
                                name: "code",
                                type: "uint16",
                            },
                        ],
                        internalType: "struct ResponseLine",
                        name: "responseLine",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint16",
                                name: "methods",
                                type: "uint16",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint256",
                                        name: "maxAge",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "noStore",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "noCache",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "immutableFlag",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "publicFlag",
                                        type: "bool",
                                    },
                                ],
                                internalType: "struct CacheControl",
                                name: "cache",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                    {
                                        internalType: "string",
                                        name: "location",
                                        type: "string",
                                    },
                                ],
                                internalType: "struct Redirect",
                                name: "redirect",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "resourceAdmin",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HeaderInfo",
                        name: "headerInfo",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bytes2",
                                name: "mimeType",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "charset",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "encoding",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "language",
                                type: "bytes2",
                            },
                            {
                                internalType: "uint256",
                                name: "size",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "version",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "lastModified",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32",
                                name: "header",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ResourceMetadata",
                        name: "metadata",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "etag",
                        type: "bytes32",
                    },
                ],
                internalType: "struct HEADResponse",
                name: "deleteResponse",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "DPR",
        outputs: [
            {
                internalType: "contract IDataPointRegistryV2",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "DPS",
        outputs: [
            {
                internalType: "contract IDataPointStorageV2",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "path",
                                type: "string",
                            },
                            {
                                internalType: "enum Method",
                                name: "method",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RequestLine",
                        name: "requestLine",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "ifModifiedSince",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "ifNoneMatch",
                        type: "bytes32",
                    },
                ],
                internalType: "struct HEADRequest",
                name: "getRequest",
                type: "tuple",
            },
        ],
        name: "GET",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                ],
                                internalType: "struct ResponseLine",
                                name: "responseLine",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "methods",
                                        type: "uint16",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "maxAge",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noStore",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noCache",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "immutableFlag",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "publicFlag",
                                                type: "bool",
                                            },
                                        ],
                                        internalType: "struct CacheControl",
                                        name: "cache",
                                        type: "tuple",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint16",
                                                name: "code",
                                                type: "uint16",
                                            },
                                            {
                                                internalType: "string",
                                                name: "location",
                                                type: "string",
                                            },
                                        ],
                                        internalType: "struct Redirect",
                                        name: "redirect",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "resourceAdmin",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct HeaderInfo",
                                name: "headerInfo",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes2",
                                        name: "mimeType",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "charset",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "encoding",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "language",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "size",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lastModified",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "header",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct ResourceMetadata",
                                name: "metadata",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "etag",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADResponse",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "dataPoints",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct LOCATEResponse",
                name: "locateResponse",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "path",
                                type: "string",
                            },
                            {
                                internalType: "enum Method",
                                name: "method",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RequestLine",
                        name: "requestLine",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "ifModifiedSince",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "ifNoneMatch",
                        type: "bytes32",
                    },
                ],
                internalType: "struct HEADRequest",
                name: "headRequest",
                type: "tuple",
            },
        ],
        name: "HEAD",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "uint16",
                                name: "code",
                                type: "uint16",
                            },
                        ],
                        internalType: "struct ResponseLine",
                        name: "responseLine",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint16",
                                name: "methods",
                                type: "uint16",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint256",
                                        name: "maxAge",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "noStore",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "noCache",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "immutableFlag",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "publicFlag",
                                        type: "bool",
                                    },
                                ],
                                internalType: "struct CacheControl",
                                name: "cache",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                    {
                                        internalType: "string",
                                        name: "location",
                                        type: "string",
                                    },
                                ],
                                internalType: "struct Redirect",
                                name: "redirect",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "resourceAdmin",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HeaderInfo",
                        name: "headerInfo",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bytes2",
                                name: "mimeType",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "charset",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "encoding",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "language",
                                type: "bytes2",
                            },
                            {
                                internalType: "uint256",
                                name: "size",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "version",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "lastModified",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32",
                                name: "header",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ResourceMetadata",
                        name: "metadata",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "etag",
                        type: "bytes32",
                    },
                ],
                internalType: "struct HEADResponse",
                name: "head",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "path",
                                type: "string",
                            },
                            {
                                internalType: "enum Method",
                                name: "method",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RequestLine",
                        name: "requestLine",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "ifModifiedSince",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "ifNoneMatch",
                        type: "bytes32",
                    },
                ],
                internalType: "struct HEADRequest",
                name: "locateRequest",
                type: "tuple",
            },
        ],
        name: "LOCATE",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                ],
                                internalType: "struct ResponseLine",
                                name: "responseLine",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "methods",
                                        type: "uint16",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "maxAge",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noStore",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noCache",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "immutableFlag",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "publicFlag",
                                                type: "bool",
                                            },
                                        ],
                                        internalType: "struct CacheControl",
                                        name: "cache",
                                        type: "tuple",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint16",
                                                name: "code",
                                                type: "uint16",
                                            },
                                            {
                                                internalType: "string",
                                                name: "location",
                                                type: "string",
                                            },
                                        ],
                                        internalType: "struct Redirect",
                                        name: "redirect",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "resourceAdmin",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct HeaderInfo",
                                name: "headerInfo",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes2",
                                        name: "mimeType",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "charset",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "encoding",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "language",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "size",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lastModified",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "header",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct ResourceMetadata",
                                name: "metadata",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "etag",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADResponse",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "dataPoints",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct LOCATEResponse",
                name: "locateResponse",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "string",
                        name: "protocol",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "path",
                        type: "string",
                    },
                    {
                        internalType: "enum Method",
                        name: "method",
                        type: "uint8",
                    },
                ],
                internalType: "struct RequestLine",
                name: "optionsRequest",
                type: "tuple",
            },
        ],
        name: "OPTIONS",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "uint16",
                                name: "code",
                                type: "uint16",
                            },
                        ],
                        internalType: "struct ResponseLine",
                        name: "responseLine",
                        type: "tuple",
                    },
                    {
                        internalType: "uint16",
                        name: "allow",
                        type: "uint16",
                    },
                ],
                internalType: "struct OPTIONSResponse",
                name: "optionsResponse",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "path",
                                        type: "string",
                                    },
                                    {
                                        internalType: "enum Method",
                                        name: "method",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct RequestLine",
                                name: "requestLine",
                                type: "tuple",
                            },
                            {
                                internalType: "uint256",
                                name: "ifModifiedSince",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32",
                                name: "ifNoneMatch",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADRequest",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bytes",
                                name: "data",
                                type: "bytes",
                            },
                            {
                                internalType: "uint256",
                                name: "chunkIndex",
                                type: "uint256",
                            },
                            {
                                internalType: "address",
                                name: "publisher",
                                type: "address",
                            },
                        ],
                        internalType: "struct DataRegistration[]",
                        name: "data",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct PATCHRequest",
                name: "patchRequest",
                type: "tuple",
            },
        ],
        name: "PATCH",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                ],
                                internalType: "struct ResponseLine",
                                name: "responseLine",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "methods",
                                        type: "uint16",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "maxAge",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noStore",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noCache",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "immutableFlag",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "publicFlag",
                                                type: "bool",
                                            },
                                        ],
                                        internalType: "struct CacheControl",
                                        name: "cache",
                                        type: "tuple",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint16",
                                                name: "code",
                                                type: "uint16",
                                            },
                                            {
                                                internalType: "string",
                                                name: "location",
                                                type: "string",
                                            },
                                        ],
                                        internalType: "struct Redirect",
                                        name: "redirect",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "resourceAdmin",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct HeaderInfo",
                                name: "headerInfo",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes2",
                                        name: "mimeType",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "charset",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "encoding",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "language",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "size",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lastModified",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "header",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct ResourceMetadata",
                                name: "metadata",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "etag",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADResponse",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "dataPoints",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct LOCATEResponse",
                name: "patchResponse",
                type: "tuple",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "path",
                                        type: "string",
                                    },
                                    {
                                        internalType: "enum Method",
                                        name: "method",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct RequestLine",
                                name: "requestLine",
                                type: "tuple",
                            },
                            {
                                internalType: "uint256",
                                name: "ifModifiedSince",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32",
                                name: "ifNoneMatch",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADRequest",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes2",
                        name: "mimeType",
                        type: "bytes2",
                    },
                    {
                        internalType: "bytes2",
                        name: "charset",
                        type: "bytes2",
                    },
                    {
                        internalType: "bytes2",
                        name: "encoding",
                        type: "bytes2",
                    },
                    {
                        internalType: "bytes2",
                        name: "language",
                        type: "bytes2",
                    },
                    {
                        components: [
                            {
                                internalType: "bytes",
                                name: "data",
                                type: "bytes",
                            },
                            {
                                internalType: "uint256",
                                name: "chunkIndex",
                                type: "uint256",
                            },
                            {
                                internalType: "address",
                                name: "publisher",
                                type: "address",
                            },
                        ],
                        internalType: "struct DataRegistration[]",
                        name: "data",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct PUTRequest",
                name: "putRequest",
                type: "tuple",
            },
        ],
        name: "PUT",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                ],
                                internalType: "struct ResponseLine",
                                name: "responseLine",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "methods",
                                        type: "uint16",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "maxAge",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noStore",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noCache",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "immutableFlag",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "publicFlag",
                                                type: "bool",
                                            },
                                        ],
                                        internalType: "struct CacheControl",
                                        name: "cache",
                                        type: "tuple",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint16",
                                                name: "code",
                                                type: "uint16",
                                            },
                                            {
                                                internalType: "string",
                                                name: "location",
                                                type: "string",
                                            },
                                        ],
                                        internalType: "struct Redirect",
                                        name: "redirect",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "resourceAdmin",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct HeaderInfo",
                                name: "headerInfo",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes2",
                                        name: "mimeType",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "charset",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "encoding",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "language",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "size",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lastModified",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "header",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct ResourceMetadata",
                                name: "metadata",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "etag",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADResponse",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "dataPoints",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct LOCATEResponse",
                name: "putResponse",
                type: "tuple",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint16",
                        name: "methods",
                        type: "uint16",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "maxAge",
                                type: "uint256",
                            },
                            {
                                internalType: "bool",
                                name: "noStore",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "noCache",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "immutableFlag",
                                type: "bool",
                            },
                            {
                                internalType: "bool",
                                name: "publicFlag",
                                type: "bool",
                            },
                        ],
                        internalType: "struct CacheControl",
                        name: "cache",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint16",
                                name: "code",
                                type: "uint16",
                            },
                            {
                                internalType: "string",
                                name: "location",
                                type: "string",
                            },
                        ],
                        internalType: "struct Redirect",
                        name: "redirect",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "resourceAdmin",
                        type: "bytes32",
                    },
                ],
                internalType: "struct HeaderInfo",
                name: "_header",
                type: "tuple",
            },
        ],
        name: "_updateDefaultHeader",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_newSiteAdmin",
                type: "bytes32",
            },
        ],
        name: "changeSiteAdmin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_role",
                type: "bytes32",
            },
        ],
        name: "createResourceRole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
        ],
        name: "getRoleAdmin",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "grantRole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "hasRole",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "callerConfirmation",
                type: "address",
            },
        ],
        name: "renounceRole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "role",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "revokeRole",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_dpr",
                type: "address",
            },
        ],
        name: "setDPR",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes4",
                name: "interfaceId",
                type: "bytes4",
            },
        ],
        name: "supportsInterface",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode$1 = "0x608060405234801561001057600080fd5b506040516159bb3803806159bb8339818101604052810190610032919061086c565b828282808383827fe883badc8743699137027ae6ca9d40716b522f64bf5b61a15f071a2371479c926001819055506100736000801b826101f960201b60201c565b506100896001546000801b6102f660201b60201c565b5081600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600e60008060001b815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff1602179055506020820151816001016000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff02191690831515021790555060808201518160010160036101000a81548160ff021916908315150217905550505060408201518160030160008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160010190816101db9190610af2565b50505060608201518160050155905050505050505050505050610bc4565b600061020b838361035760201b60201c565b6102eb57600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061028861039360201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506102f0565b600090505b92915050565b60006103078361039b60201b60201c565b905081600080858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b600061036c6000801b836103ba60201b60201c565b1561037a576001905061038d565b61038a83836103ba60201b60201c565b90505b92915050565b600033905090565b6000806000838152602001908152602001600020600101549050919050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061046382610438565b9050919050565b61047381610458565b811461047e57600080fd5b50565b6000815190506104908161046a565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104e48261049b565b810181811067ffffffffffffffff82111715610503576105026104ac565b5b80604052505050565b6000610516610424565b905061052282826104db565b919050565b600080fd5b600061ffff82169050919050565b6105438161052c565b811461054e57600080fd5b50565b6000815190506105608161053a565b92915050565b6000819050919050565b61057981610566565b811461058457600080fd5b50565b60008151905061059681610570565b92915050565b60008115159050919050565b6105b18161059c565b81146105bc57600080fd5b50565b6000815190506105ce816105a8565b92915050565b600060a082840312156105ea576105e9610496565b5b6105f460a061050c565b9050600061060484828501610587565b6000830152506020610618848285016105bf565b602083015250604061062c848285016105bf565b6040830152506060610640848285016105bf565b6060830152506080610654848285016105bf565b60808301525092915050565b600080fd5b600080fd5b600067ffffffffffffffff821115610685576106846104ac565b5b61068e8261049b565b9050602081019050919050565b60005b838110156106b957808201518184015260208101905061069e565b60008484015250505050565b60006106d86106d38461066a565b61050c565b9050828152602081018484840111156106f4576106f3610665565b5b6106ff84828561069b565b509392505050565b600082601f83011261071c5761071b610660565b5b815161072c8482602086016106c5565b91505092915050565b60006040828403121561074b5761074a610496565b5b610755604061050c565b9050600061076584828501610551565b600083015250602082015167ffffffffffffffff81111561078957610788610527565b5b61079584828501610707565b60208301525092915050565b6000819050919050565b6107b4816107a1565b81146107bf57600080fd5b50565b6000815190506107d1816107ab565b92915050565b600061010082840312156107ee576107ed610496565b5b6107f8608061050c565b9050600061080884828501610551565b600083015250602061081c848285016105d4565b60208301525060c082015167ffffffffffffffff8111156108405761083f610527565b5b61084c84828501610735565b60408301525060e0610860848285016107c2565b60608301525092915050565b6000806000606084860312156108855761088461042e565b5b600061089386828701610481565b935050602084015167ffffffffffffffff8111156108b4576108b3610433565b5b6108c0868287016107d7565b92505060406108d186828701610481565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061092d57607f821691505b6020821081036109405761093f6108e6565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261096b565b6109b2868361096b565b95508019841693508086168417925050509392505050565b6000819050919050565b60006109ef6109ea6109e584610566565b6109ca565b610566565b9050919050565b6000819050919050565b610a09836109d4565b610a1d610a15826109f6565b848454610978565b825550505050565b600090565b610a32610a25565b610a3d818484610a00565b505050565b5b81811015610a6157610a56600082610a2a565b600181019050610a43565b5050565b601f821115610aa657610a7781610946565b610a808461095b565b81016020851015610a8f578190505b610aa3610a9b8561095b565b830182610a42565b50505b505050565b600082821c905092915050565b6000610ac960001984600802610aab565b1980831691505092915050565b6000610ae28383610ab8565b9150826002028217905092915050565b610afb826108db565b67ffffffffffffffff811115610b1457610b136104ac565b5b610b1e8254610915565b610b29828285610a65565b600060209050601f831160018114610b5c5760008415610b4a578287015190505b610b548582610ad6565b865550610bbc565b601f198416610b6a86610946565b60005b82811015610b9257848901518255600182019150602085019450602081019050610b6d565b86831015610baf5784890151610bab601f891682610ab8565b8355505b6001600288020188555050505b505050505050565b614de880610bd36000396000f3fe60806040526004361061012a5760003560e01c8063515fa305116100ab578063b3c1f6661161006f578063b3c1f66614610432578063c2640ed11461046f578063d547741f1461049a578063ec35dd0d146104c3578063ef4e06ec14610500578063fe2dd3e31461052b5761012a565b8063515fa305146103415780637c4439861461037157806391d14854146103a1578063a217fddf146103de578063b2455654146104095761012a565b8063248a9ca3116100f2578063248a9ca31461024c5780632f2ff15d1461028957806332729d5e146102b257806336568abe146102db578063457fc926146103045761012a565b806301ffc9a71461012f57806303ca5dad1461016c578063046d7160146101a95780630e8beb9a146101e65780631ca6b0671461020f575b600080fd5b34801561013b57600080fd5b50610156600480360381019061015191906131d0565b610554565b6040516101639190613218565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190613444565b6105ce565b6040516101a091906135a3565b60405180910390f35b3480156101b557600080fd5b506101d060048036038101906101cb91906136b1565b610617565b6040516101dd9190613a6c565b60405180910390f35b3480156101f257600080fd5b5061020d60048036038101906102089190613aec565b610664565b005b34801561021b57600080fd5b50610236600480360381019061023191906136b1565b6106b6565b6040516102439190613b85565b60405180910390f35b34801561025857600080fd5b50610273600480360381019061026e9190613ba7565b610703565b6040516102809190613be3565b60405180910390f35b34801561029557600080fd5b506102b060048036038101906102ab9190613bfe565b610722565b005b3480156102be57600080fd5b506102d960048036038101906102d49190613ba7565b610744565b005b3480156102e757600080fd5b5061030260048036038101906102fd9190613bfe565b610797565b005b34801561031057600080fd5b5061032b60048036038101906103269190613eab565b610812565b6040516103389190613f31565b60405180910390f35b61035b600480360381019061035691906141e2565b610b51565b6040516103689190613a6c565b60405180910390f35b61038b6004803603810190610386919061432f565b610d89565b6040516103989190613a6c565b60405180910390f35b3480156103ad57600080fd5b506103c860048036038101906103c39190613bfe565b61105e565b6040516103d59190613218565b60405180910390f35b3480156103ea57600080fd5b506103f361108e565b6040516104009190613be3565b60405180910390f35b34801561041557600080fd5b50610430600480360381019061042b9190613ba7565b611095565b005b34801561043e57600080fd5b50610459600480360381019061045491906136b1565b611134565b6040516104669190613a6c565b60405180910390f35b34801561047b57600080fd5b50610484611181565b60405161049191906143d7565b60405180910390f35b3480156104a657600080fd5b506104c160048036038101906104bc9190613bfe565b6111ab565b005b3480156104cf57600080fd5b506104ea60048036038101906104e591906136b1565b6111cd565b6040516104f79190613b85565b60405180910390f35b34801561050c57600080fd5b506105156113c8565b6040516105229190614413565b60405180910390f35b34801561053757600080fd5b50610552600480360381019061054d919061442e565b611460565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105c757506105c682611479565b5b9050919050565b6105d6612f08565b6006826040019060088111156105ef576105ee614477565b5b9081600881111561060357610602614477565b5b81525050610610826114e3565b9050919050565b61061f612f2c565b6001826000015160400190600881111561063c5761063b614477565b5b908160088111156106505761064f614477565b5b8152505061065d826115c5565b9050919050565b6000801b61067181611633565b81600d60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6106be612f4c565b600082600001516040019060088111156106db576106da614477565b5b908160088111156106ef576106ee614477565b5b815250506106fc82611647565b9050919050565b6000806000838152602001908152602001600020600101549050919050565b61072b82610703565b61073481611633565b61073e838361179a565b50505050565b6000801b61075181611633565b7f80f9b6a37a676933a62100891a89f9c5ebd8d425dbc6d36160234076dd227abf600154836040516107849291906144a6565b60405180910390a1816001819055505050565b61079f61188b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610803576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61080d8282611893565b505050565b61081a612f89565b816000015160000151602001516108318133611985565b61087c573361083f826119e6565b6040517f81c239270000000000000000000000000000000000000000000000000000000081526004016108739291906144de565b60405180910390fd5b82600001516000015160200151600e6000600f8360405161089d9190614543565b908152602001604051809103902060040154815260200190815260200160002060010160010160029054906101000a900460ff1680156108fe575060006010826040516108ea9190614543565b908152602001604051809103902080549050115b1561094057806040517f1a35a44900000000000000000000000000000000000000000000000000000000815260040161093791906145a4565b60405180910390fd5b6000846000015190506008816000015160400190600881111561096657610965614477565b5b9081600881111561097a57610979614477565b5b81525050600061098982611647565b90506000816000015160200151905060006101948261ffff1614806109b357506101f48261ffff16145b15610ae1576109c58860200151611a08565b905060006109de89600001516000015160200151611b68565b9050610ac68960000151600001516020015160405180610100016040528084600001517dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200184602001517dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200184604001517dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200184606001517dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001600081526020016000815260200185815250611d2d565b60c984600001516020019061ffff16908161ffff1681525050505b60405180604001604052808481526020018281525096503373ffffffffffffffffffffffffffffffffffffffff167fb025a5fe8016b6fcec2c3f00b6a02708f698e0bc5c33bd3e0761bd15e1cab75d88604051610b3e9190613f31565b60405180910390a2505050505050919050565b610b59612f2c565b81600001516000015160200151610b708133611985565b610bbb5733610b7e826119e6565b6040517f81c23927000000000000000000000000000000000000000000000000000000008152600401610bb29291906144de565b60405180910390fd5b82600001516000015160200151600e6000600f83604051610bdc9190614543565b908152602001604051809103902060040154815260200190815260200160002060010160010160029054906101000a900460ff168015610c3d57506000601082604051610c299190614543565b908152602001604051809103902080549050115b15610c7f57806040517f1a35a449000000000000000000000000000000000000000000000000000000008152600401610c7691906145a4565b60405180910390fd5b60008460000151905060048160000151604001906008811115610ca557610ca4614477565b5b90816008811115610cb957610cb8614477565b5b815250506000610cc882611647565b90506101f481600001516020015161ffff16148015610cec57506000866020015151115b15610d2957610d078260000151602001518760200151611e8d565b856020018190525060c881600001516020019061ffff16908161ffff16815250505b8085600001819052503373ffffffffffffffffffffffffffffffffffffffff167fb557ef8d1f74cfc3680b0cd8a544a0ca88ebe7e4f3b9d95a08a495989ce92ac686604051610d789190613a6c565b60405180910390a250505050919050565b610d91612f2c565b81600001516000015160200151610da88133611985565b610df35733610db6826119e6565b6040517f81c23927000000000000000000000000000000000000000000000000000000008152600401610dea9291906144de565b60405180910390fd5b6003836000015160000151604001906008811115610e1457610e13614477565b5b90816008811115610e2857610e27614477565b5b815250506000610e3b8460000151611647565b9050600081600001516020015190506101948161ffff161480610e6357506101f48161ffff16145b15610fae5760008560000151600001516020015190506000610e8482611b68565b60e001519050610e9382611ff7565b610f6d826040518061010001604052808a602001517dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018a604001517dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018a606001517dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020018a608001517dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160008152602001600081526020016000815260200184815250611d2d565b60cc925060008760a00151511115610f9357610f8d828860a00151611e8d565b5060c992505b8284600001516020019061ffff16908161ffff168152505050505b8184600001819052506000341115611008573373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015611006573d6000803e3d6000fd5b505b3373ffffffffffffffffffffffffffffffffffffffff167f704d8f61270652cea1d4ae1c564dd55ab76a25eede9662b18389375740b4d9fa8560405161104e9190613a6c565b60405180910390a2505050919050565b600061106d6000801b8361208b565b1561107b5760019050611088565b611085838361208b565b90505b92915050565b6000801b81565b6001546110a181611633565b816001548114806110b457506000801b81145b156110f657806040517f125a2bb70000000000000000000000000000000000000000000000000000000081526004016110ed9190613be3565b60405180910390fd5b611102836001546120f5565b827f17a96dcfa97ca23bb8a7066cd78d58de2dc54b954a551ba0113958bfe2e13c2a60405160405180910390a2505050565b61113c612f2c565b6007826000015160400190600881111561115957611158614477565b5b9081600881111561116d5761116c614477565b5b8152505061117a826115c5565b9050919050565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6111b482610703565b6111bd81611633565b6111c78383611893565b50505050565b6111d5612f4c565b8160000151602001516111e88133611985565b61123357336111f6826119e6565b6040517f81c2392700000000000000000000000000000000000000000000000000000000815260040161122a9291906144de565b60405180910390fd5b826000015160200151600e6000600f836040516112509190614543565b908152602001604051809103902060040154815260200190815260200160002060010160010160029054906101000a900460ff1680156112b15750600060108260405161129d9190614543565b908152602001604051809103902080549050115b156112f357806040517f1a35a4490000000000000000000000000000000000000000000000000000000081526004016112ea91906145a4565b60405180910390fd5b600584600001516040019060088111156113105761130f614477565b5b9081600881111561132457611323614477565b5b8152505061133184611647565b92506101f483600001516020015161ffff160361137357611359846000015160200151611ff7565b60cc83600001516020019061ffff16908161ffff16815250505b3373ffffffffffffffffffffffffffffffffffffffff167f73824ce80fb895566cbc511668346532202e418a88d0ecff552761b1df078f6d846040516113b99190613b85565b60405180910390a25050919050565b6000600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cae646a46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611437573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145b9190614604565b905090565b60015461146c81611633565b61147582612150565b5050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6114eb612f08565b60008260000151905060008360200151905060006101f4905060008560400151905061151684612273565b611524576101f9915061159b565b61152e83826122d9565b61153c57610195915061159a565b600660088111156115505761154f614477565b5b81600881111561156357611562614477565b5b036115995761157d61157484611b68565b60e001516123f0565b60000151856020019061ffff16908161ffff168152505060cc91505b5b5b60405180604001604052808581526020018361ffff16815250856000018190525050505050919050565b6115cd612f2c565b6115d682611647565b81600001819052506101f48160000151600001516020015161ffff160361162e57611608826000015160200151612597565b816020018190525060c88160000151600001516020019061ffff16908161ffff16815250505b919050565b6116448161163f61188b565b61260d565b50565b61164f612f4c565b600061165e83600001516114e3565b6000015190506000816020015190506101f48161ffff16036117935760008460000151602001519050600061169282611b68565b905060006116a38260e001516123f0565b905060006116b9836116b486612597565b61265e565b90506000826040015160000151905060008460800151036116de576101949550611756565b88604001518214806116f757508360c001518960200151115b15611706576101309550611755565b60008161ffff161461171a57809550611754565b6000600881111561172e5761172d614477565b5b896000015160400151600881111561174957611748614477565b5b036117535760c895505b5b5b5b85876020019061ffff16908161ffff1681525050604051806080016040528088815260200184815260200185815260200183815250975050505050505b5050919050565b60006117a6838361105e565b61188057600160008085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061181d61188b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611885565b600090505b92915050565b600033905090565b600061189f838361105e565b1561197a57600080600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061191761188b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a46001905061197f565b600090505b92915050565b600080611991846119e6565b905061199f6001548461105e565b806119b057506119af818461105e565b5b806119dd57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60001b81145b91505092915050565b60006119fd6119f483611b68565b60e001516123f0565b606001519050919050565b6000611a1382612691565b90506000600e600083815260200190815260200160002060000160009054906101000a900461ffff1661ffff1603611b635781600e600083815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff1602179055506020820151816001016000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff02191690831515021790555060808201518160010160036101000a81548160ff021916908315150217905550505060408201518160030160008201518160000160006101000a81548161ffff021916908361ffff1602179055506020820151816001019081611b529190614833565b505050606082015181600501559050505b919050565b611b70612fac565b600f82604051611b809190614543565b9081526020016040518091039020604051806101000160405290816000820160009054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000820160029054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000820160049054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000820160069054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b611d36826126c1565b600f82604051611d469190614543565b908152602001604051809103902060010154816080018181525050600f82604051611d719190614543565b9081526020016040518091039020600201548160a0018181525050600f82604051611d9c9190614543565b9081526020016040518091039020600301548160c001818152505080600f83604051611dc89190614543565b908152602001604051809103902060008201518160000160006101000a81548161ffff021916908360f01c021790555060208201518160000160026101000a81548161ffff021916908360f01c021790555060408201518160000160046101000a81548161ffff021916908360f01c021790555060608201518160000160066101000a81548161ffff021916908360f01c02179055506080820151816001015560a0820151816002015560c0820151816003015560e082015181600401559050505050565b606082600e6000600f83604051611ea49190614543565b908152602001604051809103902060040154815260200190815260200160002060010160010160029054906101000a900460ff168015611f0557506000601082604051611ef19190614543565b908152602001604051809103902080549050115b15611f4757806040517f1a35a449000000000000000000000000000000000000000000000000000000008152600401611f3e91906145a4565b60405180910390fd5b825167ffffffffffffffff811115611f6257611f61613249565b5b604051908082528060200260200182016040528015611f905781602001602082028036833780820191505090505b50915060005b8351811015611fef57611fc385858381518110611fb657611fb5614905565b5b6020026020010151612758565b838281518110611fd657611fd5614905565b5b6020026020010181815250508080600101915050611f96565b505092915050565b6010816040516120079190614543565b908152602001604051809103902060006120219190613078565b6000600f826040516120339190614543565b9081526020016040518091039020600101819055506120518161293b565b7f055b00e14f3647ce9af043f85e942a4b8169374d43992a7044ad50a8a7e1845a8160405161208091906145a4565b60405180910390a150565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061210083610703565b905081600080858152602001908152602001600020600101819055508181847fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff60405160405180910390a4505050565b80600e60008060001b815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff1602179055506020820151816001016000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548160ff02191690831515021790555060808201518160010160036101000a81548160ff021916908315150217905550505060408201518160030160008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160010190816122609190614833565b5050506060820151816005015590505050565b600060405160200161228490614980565b60405160208183030381529060405280519060200120826040516020016122ab91906145a4565b60405160208183030381529060405280519060200120036122cf57600190506122d4565b600090505b919050565b6000808260088111156122ef576122ee614477565b5b60ff166001901b905060006003600881111561230e5761230d614477565b5b84600881111561232157612320614477565b5b148061235157506004600881111561233c5761233b614477565b5b84600881111561234f5761234e614477565b5b145b8061238057506005600881111561236b5761236a614477565b5b84600881111561237e5761237d614477565b5b145b905061238f6000801b3361105e565b1561239f576001925050506123ea565b600080836123b86123af89611b68565b60e001516123f0565b600001511661ffff1614159050816123d057806123e4565b6123da8633611985565b80156123e35750805b5b93505050505b92915050565b6123f8613099565b600e60008381526020019081526020016000206040518060800160405290816000820160009054906101000a900461ffff1661ffff1661ffff168152602001600182016040518060a0016040529081600082015481526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900460ff161515151581526020016001820160039054906101000a900460ff1615151515815250508152602001600382016040518060400160405290816000820160009054906101000a900461ffff1661ffff1661ffff16815260200160018201805461250090614660565b80601f016020809104026020016040519081016040528092919081815260200182805461252c90614660565b80156125795780601f1061254e57610100808354040283529160200191612579565b820191906000526020600020905b81548152906001019060200180831161255c57829003601f168201915b50505050508152505081526020016005820154815250509050919050565b60606010826040516125a99190614543565b908152602001604051809103902080548060200260200160405190810160405280929190818152602001828054801561260157602002820191906000526020600020905b8154815260200190600101908083116125ed575b50505050509050919050565b612617828261105e565b61265a5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016126519291906144de565b60405180910390fd5b5050565b60008282604051602001612673929190614ab1565b60405160208183030381529060405280519060200120905092915050565b6000816040516020016126a49190614b47565b604051602081830303815290604052805190602001209050919050565b42600f826040516126d29190614543565b908152602001604051809103902060030181905550600f816040516126f79190614543565b9081526020016040518091039020600201600081548092919061271990614b98565b91905055507f1c306e70c05992619e2128ad1ef88df75f36c9476282e59f51401b2abaa42e4e8160405161274d91906145a4565b60405180910390a150565b60006127626113c8565b73ffffffffffffffffffffffffffffffffffffffff1663e8a4c04e83600001516040518263ffffffff1660e01b815260040161279e9190614c35565b602060405180830381865afa1580156127bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127df9190614c6c565b9050600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f6e20077600d60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fd45d702846040518263ffffffff1660e01b815260040161287a9190613be3565b602060405180830381865afa158015612897573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128bb9190614cae565b846000015185604001516040518463ffffffff1660e01b81526004016128e2929190614cdb565b60206040518083038185885af1158015612900573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906129259190614c6c565b5061293583828460200151612b18565b92915050565b612ade816008604051806101000160405290816000820160009054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000820160029054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000820160049054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020016000820160069054906101000a900460f01b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001600182015481526020016002820154815260200160038201548152602001600482015481525050611d2d565b7f510fb78f495511d68f630cfabc06d8a58d5aeb7bc63f3538b9cd46923aa23e5d81604051612b0d91906145a4565b60405180910390a150565b601083604051612b289190614543565b908152602001604051809103902080549050811115612b7f577f362a3902d776489b8c251f64f41d10ff3be4a9280984edf516d21e4a6e10dbda8382604051612b72929190614d1a565b60405180910390a1612ec1565b601083604051612b8f9190614543565b9081526020016040518091039020805490508103612ce957601083604051612bb79190614543565b9081526020016040518091039020829080600181540180825580915050600190039060005260206000200160009091909190915055612bf46113c8565b73ffffffffffffffffffffffffffffffffffffffff16632be681f5836040518263ffffffff1660e01b8152600401612c2c9190613be3565b602060405180830381865afa158015612c49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c6d9190614cae565b600f84604051612c7d9190614543565b90815260200160405180910390206001016000828254612c9d9190614d4a565b9250508190555060008103612ce4577f688cfefb012ebddc451bd5077139509d5fbfdfc92c33cba16d7e76f16c2f5da883604051612cdb91906145a4565b60405180910390a15b612ec0565b612cf16113c8565b73ffffffffffffffffffffffffffffffffffffffff16632be681f5836040518263ffffffff1660e01b8152600401612d299190613be3565b602060405180830381865afa158015612d46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d6a9190614cae565b612d726113c8565b73ffffffffffffffffffffffffffffffffffffffff16632be681f5601086604051612d9d9190614543565b90815260200160405180910390208481548110612dbd57612dbc614905565b5b90600052602060002001546040518263ffffffff1660e01b8152600401612de49190613be3565b602060405180830381865afa158015612e01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e259190614cae565b600f85604051612e359190614543565b908152602001604051809103902060010154612e519190614d7e565b612e5b9190614d4a565b600f84604051612e6b9190614543565b90815260200160405180910390206001018190555081601084604051612e919190614543565b90815260200160405180910390208281548110612eb157612eb0614905565b5b90600052602060002001819055505b5b612eca836126c1565b7fd9104dbb62c9778e68f07361617c0e7c290633d8fc9d4335dd0710803633b93b8382604051612efb929190614d1a565b60405180910390a1505050565b6040518060400160405280612f1b6130d4565b8152602001600061ffff1681525090565b6040518060400160405280612f3f612f4c565b8152602001606081525090565b6040518060800160405280612f5f6130d4565b8152602001612f6c613099565b8152602001612f79612fac565b8152602001600080191681525090565b6040518060400160405280612f9c612f4c565b8152602001600080191681525090565b60405180610100016040528060007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001600081526020016000815260200160008152602001600080191681525090565b508054600082559060005260206000209081019061309691906130f2565b50565b6040518060800160405280600061ffff1681526020016130b761310f565b81526020016130c4613146565b8152602001600080191681525090565b604051806040016040528060608152602001600061ffff1681525090565b5b8082111561310b5760008160009055506001016130f3565b5090565b6040518060a00160405280600081526020016000151581526020016000151581526020016000151581526020016000151581525090565b6040518060400160405280600061ffff168152602001606081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6131ad81613178565b81146131b857600080fd5b50565b6000813590506131ca816131a4565b92915050565b6000602082840312156131e6576131e561316e565b5b60006131f4848285016131bb565b91505092915050565b60008115159050919050565b613212816131fd565b82525050565b600060208201905061322d6000830184613209565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61328182613238565b810181811067ffffffffffffffff821117156132a05761329f613249565b5b80604052505050565b60006132b3613164565b90506132bf8282613278565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156132ee576132ed613249565b5b6132f782613238565b9050602081019050919050565b82818337600083830152505050565b6000613326613321846132d3565b6132a9565b905082815260208101848484011115613342576133416132ce565b5b61334d848285613304565b509392505050565b600082601f83011261336a576133696132c9565b5b813561337a848260208601613313565b91505092915050565b6009811061339057600080fd5b50565b6000813590506133a281613383565b92915050565b6000606082840312156133be576133bd613233565b5b6133c860606132a9565b9050600082013567ffffffffffffffff8111156133e8576133e76132c4565b5b6133f484828501613355565b600083015250602082013567ffffffffffffffff811115613418576134176132c4565b5b61342484828501613355565b602083015250604061343884828501613393565b60408301525092915050565b60006020828403121561345a5761345961316e565b5b600082013567ffffffffffffffff81111561347857613477613173565b5b613484848285016133a8565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156134c75780820151818401526020810190506134ac565b60008484015250505050565b60006134de8261348d565b6134e88185613498565b93506134f88185602086016134a9565b61350181613238565b840191505092915050565b600061ffff82169050919050565b6135238161350c565b82525050565b6000604083016000830151848203600086015261354682826134d3565b915050602083015161355b602086018261351a565b508091505092915050565b600060408301600083015184820360008601526135838282613529565b9150506020830151613598602086018261351a565b508091505092915050565b600060208201905081810360008301526135bd8184613566565b905092915050565b6000819050919050565b6135d8816135c5565b81146135e357600080fd5b50565b6000813590506135f5816135cf565b92915050565b6000819050919050565b61360e816135fb565b811461361957600080fd5b50565b60008135905061362b81613605565b92915050565b60006060828403121561364757613646613233565b5b61365160606132a9565b9050600082013567ffffffffffffffff811115613671576136706132c4565b5b61367d848285016133a8565b6000830152506020613691848285016135e6565b60208301525060406136a58482850161361c565b60408301525092915050565b6000602082840312156136c7576136c661316e565b5b600082013567ffffffffffffffff8111156136e5576136e4613173565b5b6136f184828501613631565b91505092915050565b613703816135c5565b82525050565b613712816131fd565b82525050565b60a08201600082015161372e60008501826136fa565b5060208201516137416020850182613709565b5060408201516137546040850182613709565b5060608201516137676060850182613709565b50608082015161377a6080850182613709565b50505050565b6000604083016000830151613798600086018261351a565b50602083015184820360208601526137b082826134d3565b9150508091505092915050565b6137c6816135fb565b82525050565b6000610100830160008301516137e5600086018261351a565b5060208301516137f86020860182613718565b50604083015184820360c08601526138108282613780565b915050606083015161382560e08601826137bd565b508091505092915050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b61386581613830565b82525050565b61010082016000820151613882600085018261385c565b506020820151613895602085018261385c565b5060408201516138a8604085018261385c565b5060608201516138bb606085018261385c565b5060808201516138ce60808501826136fa565b5060a08201516138e160a08501826136fa565b5060c08201516138f460c08501826136fa565b5060e082015161390760e08501826137bd565b50505050565b600061016083016000830151848203600086015261392b8282613529565b9150506020830151848203602086015261394582826137cc565b915050604083015161395a604086018261386b565b50606083015161396e6101408601826137bd565b508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006139b183836137bd565b60208301905092915050565b6000602082019050919050565b60006139d582613979565b6139df8185613984565b93506139ea83613995565b8060005b83811015613a1b578151613a0288826139a5565b9750613a0d836139bd565b9250506001810190506139ee565b5085935050505092915050565b60006040830160008301518482036000860152613a45828261390d565b91505060208301518482036020860152613a5f82826139ca565b9150508091505092915050565b60006020820190508181036000830152613a868184613a28565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000613ab982613a8e565b9050919050565b613ac981613aae565b8114613ad457600080fd5b50565b600081359050613ae681613ac0565b92915050565b600060208284031215613b0257613b0161316e565b5b6000613b1084828501613ad7565b91505092915050565b6000610160830160008301518482036000860152613b378282613529565b91505060208301518482036020860152613b5182826137cc565b9150506040830151613b66604086018261386b565b506060830151613b7a6101408601826137bd565b508091505092915050565b60006020820190508181036000830152613b9f8184613b19565b905092915050565b600060208284031215613bbd57613bbc61316e565b5b6000613bcb8482850161361c565b91505092915050565b613bdd816135fb565b82525050565b6000602082019050613bf86000830184613bd4565b92915050565b60008060408385031215613c1557613c1461316e565b5b6000613c238582860161361c565b9250506020613c3485828601613ad7565b9150509250929050565b613c478161350c565b8114613c5257600080fd5b50565b600081359050613c6481613c3e565b92915050565b613c73816131fd565b8114613c7e57600080fd5b50565b600081359050613c9081613c6a565b92915050565b600060a08284031215613cac57613cab613233565b5b613cb660a06132a9565b90506000613cc6848285016135e6565b6000830152506020613cda84828501613c81565b6020830152506040613cee84828501613c81565b6040830152506060613d0284828501613c81565b6060830152506080613d1684828501613c81565b60808301525092915050565b600060408284031215613d3857613d37613233565b5b613d4260406132a9565b90506000613d5284828501613c55565b600083015250602082013567ffffffffffffffff811115613d7657613d756132c4565b5b613d8284828501613355565b60208301525092915050565b60006101008284031215613da557613da4613233565b5b613daf60806132a9565b90506000613dbf84828501613c55565b6000830152506020613dd384828501613c96565b60208301525060c082013567ffffffffffffffff811115613df757613df66132c4565b5b613e0384828501613d22565b60408301525060e0613e178482850161361c565b60608301525092915050565b600060408284031215613e3957613e38613233565b5b613e4360406132a9565b9050600082013567ffffffffffffffff811115613e6357613e626132c4565b5b613e6f84828501613631565b600083015250602082013567ffffffffffffffff811115613e9357613e926132c4565b5b613e9f84828501613d8e565b60208301525092915050565b600060208284031215613ec157613ec061316e565b5b600082013567ffffffffffffffff811115613edf57613ede613173565b5b613eeb84828501613e23565b91505092915050565b60006040830160008301518482036000860152613f11828261390d565b9150506020830151613f2660208601826137bd565b508091505092915050565b60006020820190508181036000830152613f4b8184613ef4565b905092915050565b600067ffffffffffffffff821115613f6e57613f6d613249565b5b602082029050602081019050919050565b600080fd5b600067ffffffffffffffff821115613f9f57613f9e613249565b5b613fa882613238565b9050602081019050919050565b6000613fc8613fc384613f84565b6132a9565b905082815260208101848484011115613fe457613fe36132ce565b5b613fef848285613304565b509392505050565b600082601f83011261400c5761400b6132c9565b5b813561401c848260208601613fb5565b91505092915050565b60006060828403121561403b5761403a613233565b5b61404560606132a9565b9050600082013567ffffffffffffffff811115614065576140646132c4565b5b61407184828501613ff7565b6000830152506020614085848285016135e6565b602083015250604061409984828501613ad7565b60408301525092915050565b60006140b86140b384613f53565b6132a9565b905080838252602082019050602084028301858111156140db576140da613f7f565b5b835b8181101561412257803567ffffffffffffffff811115614100576140ff6132c9565b5b80860161410d8982614025565b855260208501945050506020810190506140dd565b5050509392505050565b600082601f830112614141576141406132c9565b5b81356141518482602086016140a5565b91505092915050565b6000604082840312156141705761416f613233565b5b61417a60406132a9565b9050600082013567ffffffffffffffff81111561419a576141996132c4565b5b6141a684828501613631565b600083015250602082013567ffffffffffffffff8111156141ca576141c96132c4565b5b6141d68482850161412c565b60208301525092915050565b6000602082840312156141f8576141f761316e565b5b600082013567ffffffffffffffff81111561421657614215613173565b5b6142228482850161415a565b91505092915050565b61423481613830565b811461423f57600080fd5b50565b6000813590506142518161422b565b92915050565b600060c0828403121561426d5761426c613233565b5b61427760c06132a9565b9050600082013567ffffffffffffffff811115614297576142966132c4565b5b6142a384828501613631565b60008301525060206142b784828501614242565b60208301525060406142cb84828501614242565b60408301525060606142df84828501614242565b60608301525060806142f384828501614242565b60808301525060a082013567ffffffffffffffff811115614317576143166132c4565b5b6143238482850161412c565b60a08301525092915050565b6000602082840312156143455761434461316e565b5b600082013567ffffffffffffffff81111561436357614362613173565b5b61436f84828501614257565b91505092915050565b6000819050919050565b600061439d61439861439384613a8e565b614378565b613a8e565b9050919050565b60006143af82614382565b9050919050565b60006143c1826143a4565b9050919050565b6143d1816143b6565b82525050565b60006020820190506143ec60008301846143c8565b92915050565b60006143fd826143a4565b9050919050565b61440d816143f2565b82525050565b60006020820190506144286000830184614404565b92915050565b6000602082840312156144445761444361316e565b5b600082013567ffffffffffffffff81111561446257614461613173565b5b61446e84828501613d8e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60006040820190506144bb6000830185613bd4565b6144c86020830184613bd4565b9392505050565b6144d881613aae565b82525050565b60006040820190506144f360008301856144cf565b6145006020830184613bd4565b9392505050565b600081905092915050565b600061451d8261348d565b6145278185614507565b93506145378185602086016134a9565b80840191505092915050565b600061454f8284614512565b915081905092915050565b600082825260208201905092915050565b60006145768261348d565b614580818561455a565b93506145908185602086016134a9565b61459981613238565b840191505092915050565b600060208201905081810360008301526145be818461456b565b905092915050565b60006145d182613aae565b9050919050565b6145e1816145c6565b81146145ec57600080fd5b50565b6000815190506145fe816145d8565b92915050565b60006020828403121561461a5761461961316e565b5b6000614628848285016145ef565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061467857607f821691505b60208210810361468b5761468a614631565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026146f37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826146b6565b6146fd86836146b6565b95508019841693508086168417925050509392505050565b600061473061472b614726846135c5565b614378565b6135c5565b9050919050565b6000819050919050565b61474a83614715565b61475e61475682614737565b8484546146c3565b825550505050565b600090565b614773614766565b61477e818484614741565b505050565b5b818110156147a25761479760008261476b565b600181019050614784565b5050565b601f8211156147e7576147b881614691565b6147c1846146a6565b810160208510156147d0578190505b6147e46147dc856146a6565b830182614783565b50505b505050565b600082821c905092915050565b600061480a600019846008026147ec565b1980831691505092915050565b600061482383836147f9565b9150826002028217905092915050565b61483c8261348d565b67ffffffffffffffff81111561485557614854613249565b5b61485f8254614660565b61486a8282856147a6565b600060209050601f83116001811461489d576000841561488b578287015190505b6148958582614817565b8655506148fd565b601f1984166148ab86614691565b60005b828110156148d3578489015182556001820191506020850194506020810190506148ae565b868310156148f057848901516148ec601f8916826147f9565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f575454502f332e30000000000000000000000000000000000000000000000000600082015250565b600061496a60088361455a565b915061497582614934565b602082019050919050565b600060208201905081810360008301526149998161495d565b9050919050565b610100820160008201516149b7600085018261385c565b5060208201516149ca602085018261385c565b5060408201516149dd604085018261385c565b5060608201516149f0606085018261385c565b506080820151614a0360808501826136fa565b5060a0820151614a1660a08501826136fa565b5060c0820151614a2960c08501826136fa565b5060e0820151614a3c60e08501826137bd565b50505050565b600082825260208201905092915050565b6000614a5e82613979565b614a688185614a42565b9350614a7383613995565b8060005b83811015614aa4578151614a8b88826139a5565b9750614a96836139bd565b925050600181019050614a77565b5085935050505092915050565b600061012082019050614ac760008301856149a0565b818103610100830152614ada8184614a53565b90509392505050565b600061010083016000830151614afc600086018261351a565b506020830151614b0f6020860182613718565b50604083015184820360c0860152614b278282613780565b9150506060830151614b3c60e08601826137bd565b508091505092915050565b60006020820190508181036000830152614b618184614ae3565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000614ba3826135c5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203614bd557614bd4614b69565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000614c0782614be0565b614c118185614beb565b9350614c218185602086016134a9565b614c2a81613238565b840191505092915050565b60006020820190508181036000830152614c4f8184614bfc565b905092915050565b600081519050614c6681613605565b92915050565b600060208284031215614c8257614c8161316e565b5b6000614c9084828501614c57565b91505092915050565b600081519050614ca8816135cf565b92915050565b600060208284031215614cc457614cc361316e565b5b6000614cd284828501614c99565b91505092915050565b60006040820190508181036000830152614cf58185614bfc565b9050614d0460208301846144cf565b9392505050565b614d14816135c5565b82525050565b60006040820190508181036000830152614d34818561456b565b9050614d436020830184614d0b565b9392505050565b6000614d55826135c5565b9150614d60836135c5565b9250828201905080821115614d7857614d77614b69565b5b92915050565b6000614d89826135c5565b9150614d94836135c5565b9250828203905081811115614dac57614dab614b69565b5b9291505056fea26469706673582212203d4f0c35f3ea3c968b42b053a321f97d4a22fd1306b96f19da99ab16feac1ef864736f6c634300081c0033";
const isSuperArgs$1 = (xs) => xs.length > 1;
class Web3Site__factory extends ethers.ContractFactory {
    constructor(...args) {
        if (isSuperArgs$1(args)) {
            super(...args);
        }
        else {
            super(_abi$1, _bytecode$1, args[0]);
        }
    }
    getDeployTransaction(_dpr, _defaultHeader, _owner, overrides) {
        return super.getDeployTransaction(_dpr, _defaultHeader, _owner, overrides || {});
    }
    deploy(_dpr, _defaultHeader, _owner, overrides) {
        return super.deploy(_dpr, _defaultHeader, _owner, overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers.Interface(_abi$1);
    }
    static connect(address, runner) {
        return new ethers.Contract(address, _abi$1, runner);
    }
}
Web3Site__factory.bytecode = _bytecode$1;
Web3Site__factory.abi = _abi$1;

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_site",
                type: "address",
            },
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "path",
                                        type: "string",
                                    },
                                    {
                                        internalType: "enum Method",
                                        name: "method",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct RequestLine",
                                name: "requestLine",
                                type: "tuple",
                            },
                            {
                                internalType: "uint256",
                                name: "ifModifiedSince",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32",
                                name: "ifNoneMatch",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADRequest",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "int256",
                                name: "start",
                                type: "int256",
                            },
                            {
                                internalType: "int256",
                                name: "end",
                                type: "int256",
                            },
                        ],
                        internalType: "struct Range",
                        name: "rangeBytes",
                        type: "tuple",
                    },
                ],
                internalType: "struct GETRequest",
                name: "_getRequest",
                type: "tuple",
            },
        ],
        name: "GET",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                ],
                                internalType: "struct ResponseLine",
                                name: "responseLine",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "methods",
                                        type: "uint16",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "maxAge",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noStore",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noCache",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "immutableFlag",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "publicFlag",
                                                type: "bool",
                                            },
                                        ],
                                        internalType: "struct CacheControl",
                                        name: "cache",
                                        type: "tuple",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint16",
                                                name: "code",
                                                type: "uint16",
                                            },
                                            {
                                                internalType: "string",
                                                name: "location",
                                                type: "string",
                                            },
                                        ],
                                        internalType: "struct Redirect",
                                        name: "redirect",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "resourceAdmin",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct HeaderInfo",
                                name: "headerInfo",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes2",
                                        name: "mimeType",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "charset",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "encoding",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "language",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "size",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lastModified",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "header",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct ResourceMetadata",
                                name: "metadata",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "etag",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADResponse",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "int256",
                                name: "start",
                                type: "int256",
                            },
                            {
                                internalType: "int256",
                                name: "end",
                                type: "int256",
                            },
                        ],
                        internalType: "struct Range",
                        name: "bytesRange",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct GETResponse",
                name: "_getResponse",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_site",
                type: "address",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "path",
                                type: "string",
                            },
                            {
                                internalType: "enum Method",
                                name: "method",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct RequestLine",
                        name: "requestLine",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "ifModifiedSince",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes32",
                        name: "ifNoneMatch",
                        type: "bytes32",
                    },
                ],
                internalType: "struct HEADRequest",
                name: "_headRequest",
                type: "tuple",
            },
        ],
        name: "HEAD",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "uint16",
                                name: "code",
                                type: "uint16",
                            },
                        ],
                        internalType: "struct ResponseLine",
                        name: "responseLine",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint16",
                                name: "methods",
                                type: "uint16",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint256",
                                        name: "maxAge",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "noStore",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "noCache",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "immutableFlag",
                                        type: "bool",
                                    },
                                    {
                                        internalType: "bool",
                                        name: "publicFlag",
                                        type: "bool",
                                    },
                                ],
                                internalType: "struct CacheControl",
                                name: "cache",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                    {
                                        internalType: "string",
                                        name: "location",
                                        type: "string",
                                    },
                                ],
                                internalType: "struct Redirect",
                                name: "redirect",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "resourceAdmin",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HeaderInfo",
                        name: "headerInfo",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bytes2",
                                name: "mimeType",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "charset",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "encoding",
                                type: "bytes2",
                            },
                            {
                                internalType: "bytes2",
                                name: "language",
                                type: "bytes2",
                            },
                            {
                                internalType: "uint256",
                                name: "size",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "version",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "lastModified",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32",
                                name: "header",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct ResourceMetadata",
                        name: "metadata",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "etag",
                        type: "bytes32",
                    },
                ],
                internalType: "struct HEADResponse",
                name: "_headResponse",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_site",
                type: "address",
            },
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "string",
                                        name: "path",
                                        type: "string",
                                    },
                                    {
                                        internalType: "enum Method",
                                        name: "method",
                                        type: "uint8",
                                    },
                                ],
                                internalType: "struct RequestLine",
                                name: "requestLine",
                                type: "tuple",
                            },
                            {
                                internalType: "uint256",
                                name: "ifModifiedSince",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes32",
                                name: "ifNoneMatch",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADRequest",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "int256",
                                name: "start",
                                type: "int256",
                            },
                            {
                                internalType: "int256",
                                name: "end",
                                type: "int256",
                            },
                        ],
                        internalType: "struct Range",
                        name: "rangeChunks",
                        type: "tuple",
                    },
                ],
                internalType: "struct LOCATERequest",
                name: "_locateRequest",
                type: "tuple",
            },
        ],
        name: "LOCATE",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "string",
                                        name: "protocol",
                                        type: "string",
                                    },
                                    {
                                        internalType: "uint16",
                                        name: "code",
                                        type: "uint16",
                                    },
                                ],
                                internalType: "struct ResponseLine",
                                name: "responseLine",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "uint16",
                                        name: "methods",
                                        type: "uint16",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint256",
                                                name: "maxAge",
                                                type: "uint256",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noStore",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "noCache",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "immutableFlag",
                                                type: "bool",
                                            },
                                            {
                                                internalType: "bool",
                                                name: "publicFlag",
                                                type: "bool",
                                            },
                                        ],
                                        internalType: "struct CacheControl",
                                        name: "cache",
                                        type: "tuple",
                                    },
                                    {
                                        components: [
                                            {
                                                internalType: "uint16",
                                                name: "code",
                                                type: "uint16",
                                            },
                                            {
                                                internalType: "string",
                                                name: "location",
                                                type: "string",
                                            },
                                        ],
                                        internalType: "struct Redirect",
                                        name: "redirect",
                                        type: "tuple",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "resourceAdmin",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct HeaderInfo",
                                name: "headerInfo",
                                type: "tuple",
                            },
                            {
                                components: [
                                    {
                                        internalType: "bytes2",
                                        name: "mimeType",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "charset",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "encoding",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "bytes2",
                                        name: "language",
                                        type: "bytes2",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "size",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "version",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "uint256",
                                        name: "lastModified",
                                        type: "uint256",
                                    },
                                    {
                                        internalType: "bytes32",
                                        name: "header",
                                        type: "bytes32",
                                    },
                                ],
                                internalType: "struct ResourceMetadata",
                                name: "metadata",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes32",
                                name: "etag",
                                type: "bytes32",
                            },
                        ],
                        internalType: "struct HEADResponse",
                        name: "head",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32[]",
                        name: "dataPoints",
                        type: "bytes32[]",
                    },
                ],
                internalType: "struct LOCATEResponse",
                name: "_locateResponse",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_site",
                type: "address",
            },
            {
                components: [
                    {
                        internalType: "string",
                        name: "protocol",
                        type: "string",
                    },
                    {
                        internalType: "string",
                        name: "path",
                        type: "string",
                    },
                    {
                        internalType: "enum Method",
                        name: "method",
                        type: "uint8",
                    },
                ],
                internalType: "struct RequestLine",
                name: "_optionsRequest",
                type: "tuple",
            },
        ],
        name: "OPTIONS",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "protocol",
                                type: "string",
                            },
                            {
                                internalType: "uint16",
                                name: "code",
                                type: "uint16",
                            },
                        ],
                        internalType: "struct ResponseLine",
                        name: "responseLine",
                        type: "tuple",
                    },
                    {
                        internalType: "uint16",
                        name: "allow",
                        type: "uint16",
                    },
                ],
                internalType: "struct OPTIONSResponse",
                name: "_optionsResponse",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x6080604052348015600f57600080fd5b50612b928061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631adf36cc14610051578063d0d606d114610081578063dbc9e667146100b1578063ff8a0d68146100e1575b600080fd5b61006b60048036038101906100669190611637565b610111565b60405161007891906119f7565b60405180910390f35b61009b60048036038101906100969190611b0b565b6101a0565b6040516100a89190611cc6565b60405180910390f35b6100cb60048036038101906100c69190611ce8565b61030c565b6040516100d89190611d81565b60405180910390f35b6100fb60048036038101906100f69190611e0f565b61039b565b6040516101089190611f55565b60405180910390f35b61011961104a565b8273ffffffffffffffffffffffffffffffffffffffff16631ca6b067836040518263ffffffff1660e01b81526004016101529190612095565b600060405180830381865afa15801561016f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610198919061254a565b905092915050565b6101a8611087565b8273ffffffffffffffffffffffffffffffffffffffff1663b3c1f66683600001516040518263ffffffff1660e01b81526004016101e59190612095565b600060405180830381865afa158015610202573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061022b91906126e3565b90506000806000610245856020015185602001515161077f565b9250925092508015610277576101a08460000151600001516020019061ffff16908161ffff1681525050505050610306565b61029a60405180604001604052808581526020018481525085602001515161087f565b6102e45760006102b2878660200151868660016108ae565b90508060000151856020018190525060ce8560000151600001516020019061ffff16908161ffff168152505050610302565b60c88460000151600001516020019061ffff16908161ffff16815250505b5050505b92915050565b6103146110a7565b8273ffffffffffffffffffffffffffffffffffffffff166303ca5dad836040518263ffffffff1660e01b815260040161034d9190612783565b600060405180830381865afa15801561036a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103939190612811565b905092915050565b6103a36110cb565b60008373ffffffffffffffffffffffffffffffffffffffff1663046d716084600001516040518263ffffffff1660e01b81526004016103e29190612095565b600060405180830381865afa1580156103ff573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061042891906126e3565b905060008060006104428785602001518860200151610e15565b925092509250801561048257836000015185600001819052506101a08560000151600001516020019061ffff16908161ffff168152505050505050610779565b6104ac6040518060400160405280858152602001848152508560000151604001516080015161087f565b6105035760006104c4888660200151868660006108ae565b9050846000015186600001819052508060200151866040018190525060ce8660000151600001516020019061ffff16908161ffff168152505050610774565b83600001518560000181905250836000015160000151602001518560000151600001516020019061ffff16908161ffff168152505060008773ffffffffffffffffffffffffffffffffffffffff1663ef4e06ec6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610585573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a99190612898565b9050600085600001516040015160800151905060008167ffffffffffffffff8111156105d8576105d7611350565b5b6040519080825280601f01601f19166020018201604052801561060a5781602001600182028036833780820191505090505b5090506000805b8860200151518110156107535760008573ffffffffffffffffffffffffffffffffffffffff166380435b648b602001518481518110610653576106526128c5565b5b60200260200101516040518263ffffffff1660e01b81526004016106779190612903565b600060405180830381865afa158015610694573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106bd91906129bf565b905060005b8151811015610744578181815181106106de576106dd6128c5565b5b602001015160f81c60f81b8585806106f590612a37565b965081518110610708576107076128c5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506106c2565b50508080600101915050610611565b50828960000151604001516080018181525050818960400181905250505050505b505050505b92915050565b600080600080856000015112156107d55783856000015161079f90612a7f565b11156107b5576000806001925092509250610878565b84600001516107c390612a7f565b846107ce9190612ac7565b92506107dd565b846000015192505b60008560200151136108435760008560200151036107fd5783915061083e565b83856020015161080c90612a7f565b1115610822576000806001925092509250610878565b846020015161083090612a7f565b8461083b9190612ac7565b91505b61084b565b846020015191505b8183118061085857508382115b1561086d576000806001925092509250610878565b828260009250925092505b9250925092565b60008083600001511480156108a657506000836020015114806108a55750818360200151145b5b905092915050565b6108b66110f8565b81816040019060018111156108ce576108cd611f77565b5b908160018111156108e2576108e1611f77565b5b815250506000841480156108f65750845183145b1561091a578481600001819052506000816060019015159081151581525050610e0c565b600181606001901515908115158152505060018081111561093e5761093d611f77565b5b82600181111561095157610950611f77565b5b03610a1e57600084846109649190612ac7565b67ffffffffffffffff81111561097d5761097c611350565b5b6040519080825280602002602001820160405280156109ab5781602001602082028036833780820191505090505b50905060008590505b84811015610a0e578681815181106109cf576109ce6128c5565b5b60200260200101518287836109e49190612ac7565b815181106109f5576109f46128c5565b5b60200260200101818152505080806001019150506109b4565b5080826000018190525050610e0b565b60006001811115610a3257610a31611f77565b5b826001811115610a4557610a44611f77565b5b03610e0a57600084148015610a5a5750600083145b15610aba57600067ffffffffffffffff811115610a7a57610a79611350565b5b6040519080825280601f01601f191660200182016040528015610aac5781602001600182028036833780820191505090505b508160200181905250610e0c565b6000806000808973ffffffffffffffffffffffffffffffffffffffff1663ef4e06ec6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2f9190612898565b905060005b8951811015610c1b5760008273ffffffffffffffffffffffffffffffffffffffff16632be681f58c8481518110610b6e57610b6d6128c5565b5b60200260200101516040518263ffffffff1660e01b8152600401610b929190612903565b602060405180830381865afa158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd39190612afb565b9050898185610be29190612b28565b1115610bff57819550838a610bf79190612ac7565b945050610c1b565b8084610c0b9190612b28565b9350508080600101915050610b34565b5060008888610c2a9190612ac7565b905060008167ffffffffffffffff811115610c4857610c47611350565b5b6040519080825280601f01601f191660200182016040528015610c7a5781602001600182028036833780820191505090505b5090506000808790505b8c5181108015610c9357508382105b15610df85760008573ffffffffffffffffffffffffffffffffffffffff166380435b648f8481518110610cc957610cc86128c5565b5b60200260200101516040518263ffffffff1660e01b8152600401610ced9190612903565b600060405180830381865afa158015610d0a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610d3391906129bf565b90506000898314610d45576000610d47565b885b905060008190505b825181108015610d5e57508685105b15610de257828181518110610d7657610d756128c5565b5b602001015160f81c60f81b868680610d8d90612a37565b975081518110610da057610d9f6128c5565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080610dda90612a37565b915050610d4f565b5050508080610df090612a37565b915050610c84565b50818860200181905250505050505050505b5b5b95945050505050565b6000806000806000905060005b8651811015610f47578773ffffffffffffffffffffffffffffffffffffffff1663ef4e06ec6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e9a9190612898565b73ffffffffffffffffffffffffffffffffffffffff16632be681f5888381518110610ec857610ec76128c5565b5b60200260200101516040518263ffffffff1660e01b8152600401610eec9190612903565b602060405180830381865afa158015610f09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2d9190612afb565b82610f389190612b28565b91508080600101915050610e22565b50600085600001511215610f9b57808560000151610f6490612a7f565b1115610f7b57600080600193509350935050611041565b8460000151610f8990612a7f565b81610f949190612ac7565b9350610fa3565b846000015193505b600085602001511361100a576000856020015103610fc357809250611005565b808560200151610fd290612a7f565b1115610fe957600080600193509350935050611041565b8460200151610ff790612a7f565b816110029190612ac7565b92505b611012565b846020015192505b8284118061101f57508083115b1561103557600080600193509350935050611041565b83836000935093509350505b93509350939050565b604051806080016040528061105d611134565b815260200161106a611152565b815260200161107761118d565b8152602001600080191681525090565b604051806040016040528061109a61104a565b8152602001606081525090565b60405180604001604052806110ba611134565b8152602001600061ffff1681525090565b60405180606001604052806110de61104a565b81526020016110eb611259565b8152602001606081525090565b604051806080016040528060608152602001606081526020016000600181111561112557611124611f77565b5b81526020016000151581525090565b604051806040016040528060608152602001600061ffff1681525090565b6040518060800160405280600061ffff168152602001611170611273565b815260200161117d6112aa565b8152602001600080191681525090565b60405180610100016040528060007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200160007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001600081526020016000815260200160008152602001600080191681525090565b604051806040016040528060008152602001600081525090565b6040518060a00160405280600081526020016000151581526020016000151581526020016000151581526020016000151581525090565b6040518060400160405280600061ffff168152602001606081525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611307826112dc565b9050919050565b611317816112fc565b811461132257600080fd5b50565b6000813590506113348161130e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6113888261133f565b810181811067ffffffffffffffff821117156113a7576113a6611350565b5b80604052505050565b60006113ba6112c8565b90506113c6828261137f565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff8211156113f5576113f4611350565b5b6113fe8261133f565b9050602081019050919050565b82818337600083830152505050565b600061142d611428846113da565b6113b0565b905082815260208101848484011115611449576114486113d5565b5b61145484828561140b565b509392505050565b600082601f830112611471576114706113d0565b5b813561148184826020860161141a565b91505092915050565b6009811061149757600080fd5b50565b6000813590506114a98161148a565b92915050565b6000606082840312156114c5576114c461133a565b5b6114cf60606113b0565b9050600082013567ffffffffffffffff8111156114ef576114ee6113cb565b5b6114fb8482850161145c565b600083015250602082013567ffffffffffffffff81111561151f5761151e6113cb565b5b61152b8482850161145c565b602083015250604061153f8482850161149a565b60408301525092915050565b6000819050919050565b61155e8161154b565b811461156957600080fd5b50565b60008135905061157b81611555565b92915050565b6000819050919050565b61159481611581565b811461159f57600080fd5b50565b6000813590506115b18161158b565b92915050565b6000606082840312156115cd576115cc61133a565b5b6115d760606113b0565b9050600082013567ffffffffffffffff8111156115f7576115f66113cb565b5b611603848285016114af565b60008301525060206116178482850161156c565b602083015250604061162b848285016115a2565b60408301525092915050565b6000806040838503121561164e5761164d6112d2565b5b600061165c85828601611325565b925050602083013567ffffffffffffffff81111561167d5761167c6112d7565b5b611689858286016115b7565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156116cd5780820151818401526020810190506116b2565b60008484015250505050565b60006116e482611693565b6116ee818561169e565b93506116fe8185602086016116af565b6117078161133f565b840191505092915050565b600061ffff82169050919050565b61172981611712565b82525050565b6000604083016000830151848203600086015261174c82826116d9565b91505060208301516117616020860182611720565b508091505092915050565b6117758161154b565b82525050565b60008115159050919050565b6117908161177b565b82525050565b60a0820160008201516117ac600085018261176c565b5060208201516117bf6020850182611787565b5060408201516117d26040850182611787565b5060608201516117e56060850182611787565b5060808201516117f86080850182611787565b50505050565b60006040830160008301516118166000860182611720565b506020830151848203602086015261182e82826116d9565b9150508091505092915050565b61184481611581565b82525050565b6000610100830160008301516118636000860182611720565b5060208301516118766020860182611796565b50604083015184820360c086015261188e82826117fe565b91505060608301516118a360e086018261183b565b508091505092915050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b6118e3816118ae565b82525050565b6101008201600082015161190060008501826118da565b50602082015161191360208501826118da565b50604082015161192660408501826118da565b50606082015161193960608501826118da565b50608082015161194c608085018261176c565b5060a082015161195f60a085018261176c565b5060c082015161197260c085018261176c565b5060e082015161198560e085018261183b565b50505050565b60006101608301600083015184820360008601526119a9828261172f565b915050602083015184820360208601526119c3828261184a565b91505060408301516119d860408601826118e9565b5060608301516119ec61014086018261183b565b508091505092915050565b60006020820190508181036000830152611a11818461198b565b905092915050565b6000819050919050565b611a2c81611a19565b8114611a3757600080fd5b50565b600081359050611a4981611a23565b92915050565b600060408284031215611a6557611a6461133a565b5b611a6f60406113b0565b90506000611a7f84828501611a3a565b6000830152506020611a9384828501611a3a565b60208301525092915050565b600060608284031215611ab557611ab461133a565b5b611abf60406113b0565b9050600082013567ffffffffffffffff811115611adf57611ade6113cb565b5b611aeb848285016115b7565b6000830152506020611aff84828501611a4f565b60208301525092915050565b60008060408385031215611b2257611b216112d2565b5b6000611b3085828601611325565b925050602083013567ffffffffffffffff811115611b5157611b506112d7565b5b611b5d85828601611a9f565b9150509250929050565b6000610160830160008301518482036000860152611b85828261172f565b91505060208301518482036020860152611b9f828261184a565b9150506040830151611bb460408601826118e9565b506060830151611bc861014086018261183b565b508091505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000611c0b838361183b565b60208301905092915050565b6000602082019050919050565b6000611c2f82611bd3565b611c398185611bde565b9350611c4483611bef565b8060005b83811015611c75578151611c5c8882611bff565b9750611c6783611c17565b925050600181019050611c48565b5085935050505092915050565b60006040830160008301518482036000860152611c9f8282611b67565b91505060208301518482036020860152611cb98282611c24565b9150508091505092915050565b60006020820190508181036000830152611ce08184611c82565b905092915050565b60008060408385031215611cff57611cfe6112d2565b5b6000611d0d85828601611325565b925050602083013567ffffffffffffffff811115611d2e57611d2d6112d7565b5b611d3a858286016114af565b9150509250929050565b60006040830160008301518482036000860152611d61828261172f565b9150506020830151611d766020860182611720565b508091505092915050565b60006020820190508181036000830152611d9b8184611d44565b905092915050565b600060608284031215611db957611db861133a565b5b611dc360406113b0565b9050600082013567ffffffffffffffff811115611de357611de26113cb565b5b611def848285016115b7565b6000830152506020611e0384828501611a4f565b60208301525092915050565b60008060408385031215611e2657611e256112d2565b5b6000611e3485828601611325565b925050602083013567ffffffffffffffff811115611e5557611e546112d7565b5b611e6185828601611da3565b9150509250929050565b611e7481611a19565b82525050565b604082016000820151611e906000850182611e6b565b506020820151611ea36020850182611e6b565b50505050565b600081519050919050565b600082825260208201905092915050565b6000611ed082611ea9565b611eda8185611eb4565b9350611eea8185602086016116af565b611ef38161133f565b840191505092915050565b60006080830160008301518482036000860152611f1b8282611b67565b9150506020830151611f306020860182611e7a565b5060408301518482036060860152611f488282611ec5565b9150508091505092915050565b60006020820190508181036000830152611f6f8184611efe565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60098110611fb757611fb6611f77565b5b50565b6000819050611fc882611fa6565b919050565b6000611fd882611fba565b9050919050565b611fe881611fcd565b82525050565b6000606083016000830151848203600086015261200b82826116d9565b9150506020830151848203602086015261202582826116d9565b915050604083015161203a6040860182611fdf565b508091505092915050565b600060608301600083015184820360008601526120628282611fee565b9150506020830151612077602086018261176c565b50604083015161208a604086018261183b565b508091505092915050565b600060208201905081810360008301526120af8184612045565b905092915050565b60006120ca6120c5846113da565b6113b0565b9050828152602081018484840111156120e6576120e56113d5565b5b6120f18482856116af565b509392505050565b600082601f83011261210e5761210d6113d0565b5b815161211e8482602086016120b7565b91505092915050565b61213081611712565b811461213b57600080fd5b50565b60008151905061214d81612127565b92915050565b6000604082840312156121695761216861133a565b5b61217360406113b0565b9050600082015167ffffffffffffffff811115612193576121926113cb565b5b61219f848285016120f9565b60008301525060206121b38482850161213e565b60208301525092915050565b6000815190506121ce81611555565b92915050565b6121dd8161177b565b81146121e857600080fd5b50565b6000815190506121fa816121d4565b92915050565b600060a082840312156122165761221561133a565b5b61222060a06113b0565b90506000612230848285016121bf565b6000830152506020612244848285016121eb565b6020830152506040612258848285016121eb565b604083015250606061226c848285016121eb565b6060830152506080612280848285016121eb565b60808301525092915050565b6000604082840312156122a2576122a161133a565b5b6122ac60406113b0565b905060006122bc8482850161213e565b600083015250602082015167ffffffffffffffff8111156122e0576122df6113cb565b5b6122ec848285016120f9565b60208301525092915050565b6000815190506123078161158b565b92915050565b600061010082840312156123245761232361133a565b5b61232e60806113b0565b9050600061233e8482850161213e565b600083015250602061235284828501612200565b60208301525060c082015167ffffffffffffffff811115612376576123756113cb565b5b6123828482850161228c565b60408301525060e0612396848285016122f8565b60608301525092915050565b6123ab816118ae565b81146123b657600080fd5b50565b6000815190506123c8816123a2565b92915050565b600061010082840312156123e5576123e461133a565b5b6123f06101006113b0565b90506000612400848285016123b9565b6000830152506020612414848285016123b9565b6020830152506040612428848285016123b9565b604083015250606061243c848285016123b9565b6060830152506080612450848285016121bf565b60808301525060a0612464848285016121bf565b60a08301525060c0612478848285016121bf565b60c08301525060e061248c848285016122f8565b60e08301525092915050565b600061016082840312156124af576124ae61133a565b5b6124b960806113b0565b9050600082015167ffffffffffffffff8111156124d9576124d86113cb565b5b6124e584828501612153565b600083015250602082015167ffffffffffffffff811115612509576125086113cb565b5b6125158482850161230d565b6020830152506040612529848285016123ce565b60408301525061014061253e848285016122f8565b60608301525092915050565b6000602082840312156125605761255f6112d2565b5b600082015167ffffffffffffffff81111561257e5761257d6112d7565b5b61258a84828501612498565b91505092915050565b600067ffffffffffffffff8211156125ae576125ad611350565b5b602082029050602081019050919050565b600080fd5b60006125d76125d284612593565b6113b0565b905080838252602082019050602084028301858111156125fa576125f96125bf565b5b835b81811015612623578061260f88826122f8565b8452602084019350506020810190506125fc565b5050509392505050565b600082601f830112612642576126416113d0565b5b81516126528482602086016125c4565b91505092915050565b6000604082840312156126715761267061133a565b5b61267b60406113b0565b9050600082015167ffffffffffffffff81111561269b5761269a6113cb565b5b6126a784828501612498565b600083015250602082015167ffffffffffffffff8111156126cb576126ca6113cb565b5b6126d78482850161262d565b60208301525092915050565b6000602082840312156126f9576126f86112d2565b5b600082015167ffffffffffffffff811115612717576127166112d7565b5b6127238482850161265b565b91505092915050565b6000606083016000830151848203600086015261274982826116d9565b9150506020830151848203602086015261276382826116d9565b91505060408301516127786040860182611fdf565b508091505092915050565b6000602082019050818103600083015261279d818461272c565b905092915050565b6000604082840312156127bb576127ba61133a565b5b6127c560406113b0565b9050600082015167ffffffffffffffff8111156127e5576127e46113cb565b5b6127f184828501612153565b60008301525060206128058482850161213e565b60208301525092915050565b600060208284031215612827576128266112d2565b5b600082015167ffffffffffffffff811115612845576128446112d7565b5b612851848285016127a5565b91505092915050565b6000612865826112fc565b9050919050565b6128758161285a565b811461288057600080fd5b50565b6000815190506128928161286c565b92915050565b6000602082840312156128ae576128ad6112d2565b5b60006128bc84828501612883565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6128fd81611581565b82525050565b600060208201905061291860008301846128f4565b92915050565b600067ffffffffffffffff82111561293957612938611350565b5b6129428261133f565b9050602081019050919050565b600061296261295d8461291e565b6113b0565b90508281526020810184848401111561297e5761297d6113d5565b5b6129898482856116af565b509392505050565b600082601f8301126129a6576129a56113d0565b5b81516129b684826020860161294f565b91505092915050565b6000602082840312156129d5576129d46112d2565b5b600082015167ffffffffffffffff8111156129f3576129f26112d7565b5b6129ff84828501612991565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612a428261154b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612a7457612a73612a08565b5b600182019050919050565b6000612a8a82611a19565b91507f80000000000000000000000000000000000000000000000000000000000000008203612abc57612abb612a08565b5b816000039050919050565b6000612ad28261154b565b9150612add8361154b565b9250828203905081811115612af557612af4612a08565b5b92915050565b600060208284031215612b1157612b106112d2565b5b6000612b1f848285016121bf565b91505092915050565b6000612b338261154b565b9150612b3e8361154b565b9250828201905080821115612b5657612b55612a08565b5b9291505056fea2646970667358221220992038dcd2af4d3233d5ac80defe345a09d44710cad0cb05a6db523f1d4ef61664736f6c634300081c0033";
const isSuperArgs = (xs) => xs.length > 1;
class WTTPGatewayV3__factory extends ethers.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers.Contract(address, _abi, runner);
    }
}
WTTPGatewayV3__factory.bytecode = _bytecode;
WTTPGatewayV3__factory.abi = _abi;

// Import JSON files using dynamic import
const config = {
    networks: {
        localhost: {
            rpcList: ["http://localhost:8545"],
            chainId: 31337,
            gateway: "0x36C02dA8a0983159322a80FFE9F24b1acfF8B570",
        },
        sepolia: {
            rpcList: [
                "https://ethereum-sepolia-rpc.publicnode.com",
                "https://1rpc.io/sepolia",
                "https://sepolia.drpc.org",
                "https://sepolia.meowrpc.com"
            ],
            chainId: 11155111,
            gateway: "0x8B57036c02DA8A0983159322A80FFe9F24b1aCFF",
        },
        mainnet: {
            rpcList: [
                "https://ethereum-rpc.publicnode.com",
                "https://eth.llamarpc.com",
                "https://1rpc.io/eth",
                "https://eth.drpc.org",
                "https://eth.meowrpc.com"
            ],
            chainId: 1,
            gateway: "0xa80ffe9f24B1aCFf8B57036C02DA8A0983159322",
        }
    },
};

/**
 * WTTP Methods Utility Module
 *
 * This module provides utility functions for interacting with the Web3 HTTP (WTTP) protocol.
 * WTTP is a decentralized protocol that allows accessing web content stored on blockchain networks.
 *
 * The module includes functions for:
 * - Parsing and validating WTTP URLs
 * - Resolving ENS names to Ethereum addresses
 * - Interacting with WTTP Gateway and Web3Site contracts
 * - Making HEAD and GET requests to WTTP resources
 */
// Import from the root directory for compatibility with the build process
/**
 * The current version of the WTTP protocol supported by this library
 */
const WTTP_VERSION = "WTTP/3.0";
/**
 * Formats and validates an Ethereum address
 *
 * @param address - The Ethereum address to format and validate
 * @returns The checksummed Ethereum address
 * @throws Error if the address is invalid
 */
function formatEthereumAddress(address) {
    try {
        // Use ethers to validate the host is a valid address
        const checksumAddress = ethers.ethers.getAddress(String(address));
        // ethers.isAddress(checksumAddress); // try/catch implemented, so this is not needed
        return checksumAddress;
    }
    catch (error) {
        throw `Invalid Ethereum address: ${address} - ${error}`;
    }
}
/**
 * Resolves an ENS (Ethereum Name Service) name to its corresponding Ethereum address
 *
 * @param name - The ENS name to resolve (e.g., "example.eth")
 * @returns Promise resolving to the Ethereum address
 * @throws Error if the ENS name cannot be resolved
 */
async function resolveEnsName(name) {
    const rpcUrl = config.networks.mainnet.rpcList[0];
    const provider = new ethers.ethers.JsonRpcProvider(rpcUrl);
    try {
        const resolved = await provider.resolveName(name);
        if (resolved) {
            return resolved;
        }
        else {
            throw `Could not resolve ENS name: ${name}`;
        }
    }
    catch (error) {
        throw `Invalid ENS name: ${name} - ${error}`;
    }
}
/**
 * Parses and validates a WTTP URL, resolving host names and determining network information
 *
 * @param url - The WTTP URL to parse
 * @returns Promise resolving to a WttpUrl object containing parsed URL information
 * @throws Error if the URL is invalid or cannot be parsed
 */
async function getWttpUrl(url) {
    url = new URL(url);
    if (!url.protocol.startsWith('wttp')) {
        // console.log(`Protocol not supported: ${url.protocol}`);
        throw `Invalid WTTP URL: ${url.protocol} - URL must start with wttp://`;
    }
    // Use port to determine network, or default to first network in config
    const networkName = url.port || String(config.networks[Object.keys(config.networks)[0]].chainId);
    const network = getNetworkAlias(networkName);
    url.port = networkName;
    try {
        // Resolve host address (ENS or Ethereum address)
        const hostAddress = await getHostAddress(url);
        url.host = hostAddress;
        // Get gateway address for the network
        const gatewayAddress = getGatewayAddress(url);
        return {
            url,
            network,
            gateway: gatewayAddress,
            host: hostAddress
        };
    }
    catch (error) {
        throw `Bad Host or Gateway: ${url} - ${error}`;
    }
}
/**
 * Maps network aliases to their canonical network names
 *
 * @param alias - The network alias or chain ID
 * @returns The canonical network name
 */
function getNetworkAlias(alias) {
    const aliases = {
        "leth": "localhost",
        "local": "localhost",
        "31337": "localhost",
        "seth": "sepolia",
        "11155111": "sepolia",
        "eth": "mainnet",
        "1": "mainnet",
    };
    return aliases[alias] || alias;
}
/**
 * Resolves a hostname to an Ethereum address
 * Handles both ENS names and direct Ethereum addresses
 *
 * @param url - The URL containing the hostname to resolve
 * @returns Promise resolving to the Ethereum address
 */
async function getHostAddress(url) {
    url = new URL(url);
    const host = url.hostname;
    if (host.endsWith('.eth')) {
        return await resolveEnsName(host);
    }
    return formatEthereumAddress(host);
}
/**
 * Gets the WTTP gateway address for a given network
 *
 * @param url - The URL containing network information in the port
 * @returns The Ethereum address of the WTTP gateway for the network
 */
function getGatewayAddress(url) {
    url = new URL(url);
    const networkAlias = getNetworkAlias(url.port);
    const networkKeys = Object.keys(config.networks);
    const network = networkAlias ? config.networks[networkAlias] : config.networks[networkKeys[0]];
    return formatEthereumAddress(network.gateway);
}
/**
 * Creates a WTTP provider for interacting with WTTP contracts
 *
 * @param wttpUrl - The parsed WTTP URL information
 * @param signer - Optional Ethereum signer for authenticated requests
 * @returns Promise resolving to a WttpProvider object with gateway and host contracts
 * @throws Error if the provider cannot be created
 *
 * Note: This function modifies the url in the return. When returning the response to the client, use the original url.
 */
async function getWttpProvider(wttpUrl, signer) {
    let network;
    let provider;
    try {
        // Get network configuration and create JSON-RPC provider
        network = config.networks[wttpUrl.network];
        provider = new ethers.ethers.JsonRpcProvider(network.rpcList[0], network.chainId);
    }
    catch (error) {
        throw `Invalid network ${wttpUrl.network} - could not mount provider: ${error}`;
    }
    try {
        // Load the Web3Site contract (host) and WTTP Gateway contract
        // Not technically needed for read-only operations, but good to have
        // Will be needed for write methods in the future
        const host = await loadWttpHost(wttpUrl.host, provider, signer);
        const gateway = await loadWttpGateway(wttpUrl, provider, signer);
        return { gateway, host };
    }
    catch (error) {
        throw `
            Invalid WTTP contracts: \n
            WTTP Gateway: ${wttpUrl.gateway}; \n
            Web3Site: ${wttpUrl.host}; - ${error}
        `;
    }
}
/**
 * A HEAD request that will fail if sent to an invalid path
 * Used for testing if a contract implements the WTTP protocol
 */
const failHeadRequest = {
    requestLine: {
        protocol: WTTP_VERSION,
        path: "404", // should return 404 since the path doesn't start with a /
        method: 0
    },
    ifModifiedSince: 0n,
    ifNoneMatch: ethers.ethers.ZeroHash,
};
/**
 * Loads a Web3Site contract instance and verifies it implements the WTTP protocol
 *
 * @param address - The Ethereum address of the Web3Site contract
 * @param provider - The Ethereum JSON-RPC provider
 * @param signer - Optional Ethereum signer for authenticated requests
 * @returns Promise resolving to a Web3Site contract instance
 * @throws Error if the contract is invalid or doesn't implement the WTTP protocol
 */
async function loadWttpHost(address, provider, signer) {
    try {
        // Create a random wallet if no signer is provided
        signer = signer || ethers.ethers.Wallet.createRandom();
        let siteFactory = new Web3Site__factory(signer.connect(provider));
        let site = siteFactory.attach(address);
        // Test if the contract implements the WTTP protocol
        await site.HEAD(failHeadRequest);
        return site;
    }
    catch (error) {
        throw `Invalid WTTP Host: ${address} - invalid contract: ${error}`;
        // should throw a 501 Not Implemented error upstream
    }
}
/**
 * Checks if a Web3Site contract implements the WTTP protocol
 *
 * @param host - The Web3Site contract instance to check
 * @returns Promise resolving to true if the contract is valid, false otherwise
 */
async function checkWttpHost(host) {
    try {
        // A successful call means the host is valid
        await host.HEAD(failHeadRequest);
        return true;
    }
    catch (error) {
        return false;
        // should throw a 501 Not Implemented error upstream
    }
}
/**
 * Loads a WTTP Gateway contract instance and verifies it implements the WTTP protocol
 *
 * @param wttpUrl - The parsed WTTP URL information
 * @param provider - The Ethereum JSON-RPC provider
 * @param signer - Optional Ethereum signer for authenticated requests
 * @returns Promise resolving to a WTTPGatewayV3 contract instance
 * @throws Error if the contract is invalid or doesn't implement the WTTP protocol
 */
async function loadWttpGateway(wttpUrl, provider, signer) {
    try {
        // Create a random wallet if no signer is provided
        signer = signer || ethers.ethers.Wallet.createRandom();
        let gatewayFactory = new WTTPGatewayV3__factory(signer.connect(provider));
        let gateway = gatewayFactory.attach(wttpUrl.gateway);
        // Test if the contract implements the WTTP protocol
        await gateway.HEAD(wttpUrl.host, failHeadRequest);
        return gateway;
    }
    catch (error) {
        throw `Invalid WTTP Gateway: ${wttpUrl.gateway} - invalid contract: ${error}`;
        // should throw a 502 Bad Gateway error upstream
    }
}
/**
 * Checks if a WTTP Gateway contract implements the WTTP protocol
 *
 * @param gateway - The WTTPGatewayV3 contract instance to check
 * @param host - The Ethereum address of the Web3Site contract
 * @returns Promise resolving to true if the contract is valid, false otherwise
 */
async function checkWttpGateway(gateway, host) {
    try {
        // A successful call means the gateway is valid
        await gateway.HEAD(host, failHeadRequest);
        return true;
    }
    catch (error) {
        return false;
        // should throw a 502 Bad Gateway error upstream
    }
}
/**
 * Performs a GET request to a WTTP resource
 *
 * @param url - The WTTP URL to request
 * @param options - Optional parameters for the GET request
 * @returns Promise resolving to a GETResponseStruct containing the response data
 */
async function wttpGet(url, options) {
    url = new URL(url);
    // Parse the URL and create a provider
    let wttpUrl = await getWttpUrl(url);
    let wttpProvider = await getWttpProvider(wttpUrl, options?.signer);
    // Create the GET request structure
    const getReq = {
        head: {
            requestLine: {
                protocol: WTTP_VERSION,
                path: url.pathname,
                method: 1 // GET bitmask
            },
            ifModifiedSince: options?.ifModifiedSince || 0n,
            ifNoneMatch: options?.ifNoneMatch || ethers.ethers.ZeroHash,
        },
        rangeBytes: options?.range || { start: 0, end: 0 },
    };
    try {
        // Send the GET request through the gateway
        const response = await wttpProvider.gateway.GET(wttpUrl.host, getReq);
        return response;
    }
    catch (error) {
        // Handle errors with appropriate HTTP status codes
        let statusCode = 500n; // Internal Server Error by default
        if (wttpProvider.gateway && !checkWttpGateway(wttpProvider.gateway, wttpUrl.host)) {
            statusCode = 502n; // Bad Gateway
            if (wttpProvider.host && !checkWttpHost(wttpProvider.host)) {
                statusCode = 501n; // Not Implemented
            }
        }
        // Return an empty response with the appropriate error status code
        return wttpErrorResponse(statusCode);
    }
}
/**
 * Creates an error response for WTTP requests
 *
 * @param statusCode - The HTTP status code for the error
 * @param wttpUrl - Optional WTTP URL information to include in the error message
 * @returns A GETResponseStruct with the error information
 */
function wttpErrorResponse(statusCode, wttpUrl) {
    return {
        head: {
            responseLine: {
                protocol: WTTP_VERSION,
                code: statusCode
            },
            headerInfo: {
                methods: 0n,
                cache: {
                    maxAge: 0n,
                    noStore: false,
                    noCache: false,
                    immutableFlag: false,
                    publicFlag: false
                },
                redirect: { code: 0n, location: '' },
                resourceAdmin: ethers.ethers.ZeroAddress
            },
            metadata: {
                mimeType: '',
                charset: '',
                encoding: '',
                language: '',
                size: 0n,
                version: 0n,
                lastModified: 0n,
                header: ethers.ethers.ZeroHash
            },
            etag: ethers.ethers.ZeroHash
        },
        bytesRange: { start: 0, end: 0 },
        data: wttpUrl ? `Gateway: ${wttpUrl.gateway} - Host: ${wttpUrl.host}` : ''
    };
}
/**
 * Performs a HEAD request to a WTTP resource
 *
 * @param url - The WTTP URL to request
 * @param options - Optional parameters for the HEAD request
 * @returns Promise resolving to a HEADResponseStruct containing the response metadata
 * @throws Error if the URL is invalid or the provider cannot be created
 */
async function wttpHead(url, options) {
    url = new URL(url);
    // Parse the URL
    let wttpUrl;
    try {
        wttpUrl = await getWttpUrl(url);
    }
    catch (error) {
        throw `Invalid WTTP URL: ${error}`;
    }
    // Create a provider
    let wttpProvider;
    try {
        wttpProvider = await getWttpProvider(wttpUrl, options?.signer);
    }
    catch (error) {
        throw `Failed to mount WTTP Provider: ${error}`;
    }
    // Create the HEAD request structure
    const headReq = {
        requestLine: {
            protocol: WTTP_VERSION,
            path: url.pathname,
            method: 0
        },
        ifModifiedSince: options?.ifModifiedSince || 0n,
        ifNoneMatch: options?.ifNoneMatch || ethers.ethers.ZeroHash,
    };
    try {
        // Send the HEAD request through the gateway
        const response = await wttpProvider.gateway.HEAD(wttpUrl.host, headReq);
        return response;
    }
    catch (error) {
        // Handle errors with appropriate HTTP status codes
        let statusCode = 500n; // Internal Server Error by default
        if (wttpProvider.gateway && !checkWttpGateway(wttpProvider.gateway, wttpUrl.host)) {
            statusCode = 502n; // Bad Gateway
            if (wttpProvider.host && !checkWttpHost(wttpProvider.host)) {
                statusCode = 501n; // Not Implemented
            }
        }
        // Return an empty response with the appropriate error status code
        return wttpErrorResponse(statusCode, wttpUrl).head;
    }
}

/**
 * WTTP Fetch Module
 *
 * This module extends the standard fetch API to support WTTP protocol.
 * It allows making requests to both HTTP and WTTP resources using a unified interface.
 */
/**
 * Configuration for the WTTP handler
 */
let handlerConfig = null;
/**
 * Initializes the WTTP handler with configuration
 *
 * @param config - Configuration for the WTTP handler
 */
function initWttpHandler(config) {
    handlerConfig = config;
}
/**
 * Converts a WTTP response to a standard fetch Response object
 *
 * @param wttpResponse - The WTTP response from the contract
 * @param url - The URL that was requested
 * @returns A standard fetch Response object
 */
function convertWttpResponseToFetchResponse(wttpResponse, url) {
    // Extract status code
    const status = Number(wttpResponse.head.responseLine.code);
    // Extract headers
    const headers = new Headers();
    // Add content type if available
    if (wttpResponse.head.metadata.mimeType) {
        let contentType = String(wttpResponse.head.metadata.mimeType);
        if (wttpResponse.head.metadata.charset) {
            contentType += `; charset=${String(wttpResponse.head.metadata.charset)}`;
        }
        headers.set("Content-Type", contentType);
    }
    // Add content encoding if available
    if (wttpResponse.head.metadata.encoding) {
        headers.set("Content-Encoding", String(wttpResponse.head.metadata.encoding));
    }
    // Add content language if available
    if (wttpResponse.head.metadata.language) {
        headers.set("Content-Language", String(wttpResponse.head.metadata.language));
    }
    // Add content length if available
    if (wttpResponse.head.metadata.size) {
        headers.set("Content-Length", wttpResponse.head.metadata.size.toString());
    }
    // Add ETag if available
    if (wttpResponse.head.etag && wttpResponse.head.etag !== ethers.ethers.ZeroHash) {
        headers.set("ETag", String(wttpResponse.head.etag));
    }
    // Add Last-Modified if available
    if (wttpResponse.head.metadata.lastModified) {
        const lastModified = new Date(Number(wttpResponse.head.metadata.lastModified) * 1000);
        headers.set("Last-Modified", lastModified.toUTCString());
    }
    // Add cache control headers
    const cacheControl = [];
    if (Number(wttpResponse.head.headerInfo.cache.maxAge) > 0) {
        cacheControl.push(`max-age=${wttpResponse.head.headerInfo.cache.maxAge}`);
    }
    if (wttpResponse.head.headerInfo.cache.noStore) {
        cacheControl.push("no-store");
    }
    if (wttpResponse.head.headerInfo.cache.noCache) {
        cacheControl.push("no-cache");
    }
    if (wttpResponse.head.headerInfo.cache.immutableFlag) {
        cacheControl.push("immutable");
    }
    if (wttpResponse.head.headerInfo.cache.publicFlag) {
        cacheControl.push("public");
    }
    if (cacheControl.length > 0) {
        headers.set("Cache-Control", cacheControl.join(", "));
    }
    // Add WTTP protocol version
    headers.set("WTTP-Version", WTTP_VERSION);
    // Add WTTP-Host
    headers.set("WTTP-Host", url.hostname);
    // Handle redirects
    if (Number(wttpResponse.head.headerInfo.redirect.code) > 0) {
        Number(wttpResponse.head.headerInfo.redirect.code);
        const location = wttpResponse.head.headerInfo.redirect.location;
        // Set the Location header for redirects
        if (location) {
            // Handle relative URLs
            const redirectUrl = location.startsWith("/") || location.startsWith("http") || location.startsWith("wttp")
                ? location
                : new URL(location, url).href;
            headers.set("Location", redirectUrl);
        }
    }
    // Create response body from the data
    let body = null;
    if (wttpResponse.data) {
        // Convert the data to a Uint8Array if it's a hex string
        if (typeof wttpResponse.data === 'string' && wttpResponse.data.startsWith('0x')) {
            body = ethers.ethers.getBytes(wttpResponse.data);
        }
        else {
            // Otherwise, use the data as is
            body = wttpResponse.data;
        }
    }
    // Create and return the Response object
    return new Response(body, {
        status,
        headers,
    });
}
/**
 * Mock WTTP GET function for testing
 * Returns a static result for any WTTP request
 *
 * @param url - The URL to request
 * @returns A mock WTTP response
 */
async function mockWttpGet(url) {
    url = new URL(url);
    // Create a mock response
    return {
        head: {
            responseLine: {
                protocol: WTTP_VERSION,
                code: 200n
            },
            headerInfo: {
                methods: 1n, // GET method
                cache: {
                    maxAge: 3600n,
                    noStore: false,
                    noCache: false,
                    immutableFlag: false,
                    publicFlag: true
                },
                redirect: {
                    code: 0n,
                    location: ''
                },
                resourceAdmin: ethers.ethers.ZeroAddress
            },
            metadata: {
                mimeType: 'text/html',
                charset: 'utf-8',
                encoding: '',
                language: 'en',
                size: BigInt(url.pathname === '/large' ? 1024 : 256),
                version: 1n,
                lastModified: BigInt(Math.floor(Date.now() / 1000) - 3600),
                header: ethers.ethers.ZeroHash
            },
            etag: ethers.ethers.keccak256(ethers.ethers.toUtf8Bytes(`mock-etag-${url.pathname}`))
        },
        bytesRange: {
            start: 0n,
            end: url.pathname === '/large' ? 1024n : 256n
        },
        data: `<!DOCTYPE html>
<html>
<head>
    <title>Mock WTTP Response</title>
    <meta charset="utf-8">
</head>
<body>
    <h1>Mock WTTP Response</h1>
    <p>This is a mock response for testing the WTTP fetch implementation.</p>
    <p>Requested URL: ${url.href}</p>
    <p>Pathname: ${url.pathname}</p>
</body>
</html>`
    };
}
/**
 * Extended fetch function that supports both HTTP and WTTP protocols
 *
 * @param url - The URL to fetch
 * @param options - Fetch options, including WTTP-specific options
 * @returns A Promise that resolves to a Response object
 */
async function fetch(url, options = {}) {
    url = new URL(url);
    // Check if this is a WTTP URL
    if (url.protocol === 'wttp:') {
        // Extract WTTP-specific options
        const wttpOptions = options.wttpOptions || {};
        // Use the static signer from the handler config if available and enabled
        if (handlerConfig && handlerConfig.staticSigner && !wttpOptions.signer) {
            wttpOptions.signer = handlerConfig.signer;
        }
        try {
            // Make the WTTP request
            const wttpResponse = await wttpGet(url, wttpOptions);
            // Convert the WTTP response to a fetch Response
            return convertWttpResponseToFetchResponse(wttpResponse, url);
        }
        catch (error) {
            // Handle errors
            console.error('WTTP fetch error:', error);
            // Return a Response with an error status
            return new Response(`WTTP fetch error: ${error}`, {
                status: 500,
                headers: {
                    'Content-Type': 'text/plain',
                    'WTTP-Error': String(error)
                }
            });
        }
    }
    else {
        // For HTTP URLs, use the standard fetch
        return globalThis.fetch(url, options);
    }
}

exports.WTTP_VERSION = WTTP_VERSION;
exports.fetch = fetch;
exports.formatEthereumAddress = formatEthereumAddress;
exports.getHostAddress = getHostAddress;
exports.getNetworkAlias = getNetworkAlias;
exports.getWttpProvider = getWttpProvider;
exports.getWttpUrl = getWttpUrl;
exports.initWttpHandler = initWttpHandler;
exports.loadWttpGateway = loadWttpGateway;
exports.loadWttpHost = loadWttpHost;
exports.mockWttpGet = mockWttpGet;
exports.resolveEnsName = resolveEnsName;
exports.wttpGet = wttpGet;
exports.wttpHead = wttpHead;
//# sourceMappingURL=index.cjs.js.map
